Bridge.assembly("Kingdom",function($asm){"use strict";Bridge.define("Kingdom.Achievement",{statics:{fields:{separator:0,enemiesKilled:0,unitsLost:0,finishedGames:0,citiesCaptured:0,resourcesRebuilt:0,unitsRecruited:0,researchesResearched:0,recruitTentsBuilt:0,recruitTentsDestroyed:0,achievements:null},ctors:{init:function(){this.separator=1e4;this.achievements=System.Array.init([new Kingdom.Achievement("Destroy Them All","Kill 25 enemies",25,0,0,0,0,0,0,0,0,!1,!1),new Kingdom.Achievement("Game Over","Make it to the end",0,0,1,0,0,0,0,0,0,!1,!1),new Kingdom.Achievement("You shall not pass","Kill 10 enemies while defending in one game",0,0,0,0,0,0,0,0,0,!0,!1),new Kingdom.Achievement("I'm Ironman!","Research 'Ironsmithing'",0,0,0,0,0,0,0,0,0,!0,!1),new Kingdom.Achievement("The power of gunpowder","Research 'Gunpowder'",0,0,0,0,0,0,0,0,0,!0,!1),new Kingdom.Achievement("What about an upgrade?","You'll need higher resolution to play this game",0,0,0,0,0,0,0,0,0,!0,!0)],Kingdom.Achievement)}},methods:{Load:function(forceLoadString){var $t,$t1,$t2,$t3,s,numbers,achievsCompleted,i;forceLoadString===void 0&&(forceLoadString=null);s=($t=forceLoadString,$t!=null?$t:($t1=window.localStorage.kingdom_achievs,$t1!=null?$t1:System.String.format("0{0}0{1}0{2}0{3}0{4}0{5}0{6}0{7}0",Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)))).toString();try{numbers=System.Linq.Enumerable.from(System.String.split(s,[Kingdom.Achievement.separator].map(function(i){return String.fromCharCode(i)}))).select($asm.$.Kingdom.Achievement.f1).toArray(System.Int32);Kingdom.Achievement.enemiesKilled=numbers[System.Array.index(0,numbers)];Kingdom.Achievement.unitsLost=numbers[System.Array.index(1,numbers)];Kingdom.Achievement.finishedGames=numbers[System.Array.index(2,numbers)];Kingdom.Achievement.citiesCaptured=numbers[System.Array.index(3,numbers)];Kingdom.Achievement.resourcesRebuilt=numbers[System.Array.index(4,numbers)];Kingdom.Achievement.unitsRecruited=numbers[System.Array.index(5,numbers)];Kingdom.Achievement.researchesResearched=numbers[System.Array.index(6,numbers)];Kingdom.Achievement.recruitTentsBuilt=numbers[System.Array.index(7,numbers)];Kingdom.Achievement.recruitTentsDestroyed=numbers[System.Array.index(8,numbers)];Kingdom.Achievement.Check(!1)}catch($e1){$e1=System.Exception.create($e1);Kingdom.Achievement.Load(System.String.format("0{0}0{1}0{2}0{3}0{4}0{5}0{6}0{7}0",Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)))}s=($t2=window.localStorage.kingdom_achievs_complete,$t2!=null?$t2:"").toString();try{achievsCompleted=System.Linq.Enumerable.from(System.String.split(s,[Kingdom.Achievement.separator].map(function(i){return String.fromCharCode(i)}))).select($asm.$.Kingdom.Achievement.f1).toArray(System.Int32);$t3=Bridge.getEnumerator(achievsCompleted);try{while($t3.moveNext())i=$t3.Current,Kingdom.Achievement.achievements[System.Array.index(i,Kingdom.Achievement.achievements)].isDone=!0}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$dispose()}}catch($e2){$e2=System.Exception.create($e2)}},Save:function(){var s=System.String.concat(System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",Bridge.box(Kingdom.Achievement.enemiesKilled,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.unitsLost,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.finishedGames,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.citiesCaptured,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.resourcesRebuilt,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.researchesResearched,System.Int32)),System.String.format("{0}{1}{2}{3}",Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.recruitTentsBuilt,System.Int32),Bridge.box(Kingdom.Achievement.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.Achievement.recruitTentsDestroyed,System.Int32))),completedAchievs,ca,i;for(window.localStorage.kingdom_achievs=s,s="",completedAchievs=System.Linq.Enumerable.from(Kingdom.Achievement.achievements).where($asm.$.Kingdom.Achievement.f2).count(),ca=0,i=0;i<Kingdom.Achievement.achievements.length;i=i+1|0)Kingdom.Achievement.achievements[System.Array.index(i,Kingdom.Achievement.achievements)].isDone&&(s=System.String.concat(s,i),(ca=ca+1|0)!==completedAchievs&&(s=System.String.concat(s,String.fromCharCode(Kingdom.Achievement.separator))));window.localStorage.kingdom_achievs_complete=s},Check:function(save){save===void 0&&(save=!0);for(var i=0;i<Kingdom.Achievement.achievements.length;i=i+1|0)Kingdom.Achievement.achievements[System.Array.index(i,Kingdom.Achievement.achievements)].CheckAchiev();save&&Kingdom.Achievement.Save()},getAchievHTML:function(){for(var a,s="",i=0;i<Kingdom.Achievement.achievements.length;i=i+1|0)a=Kingdom.Achievement.achievements[System.Array.index(i,Kingdom.Achievement.achievements)],s=System.String.concat(s,System.String.format("<div class='achiev{0}'><h3>{1}<\/h3><p>{2}<\/p><\/div>",a.isDone?"Done":"",a.name,a.isSecret&&!a.isDone?"<i>This achievement is a big secret. You have to unlock it by accident.<\/i>":a.description));return s}}},fields:{name:null,description:null,reqEnemiesKilled:0,reqUnitsLost:0,reqFinishedGames:0,reqCitiesCaptured:0,reqResourcesRebuilt:0,reqUnitsRecruited:0,reqResearchesResearched:0,reqRecruitTentsBuilt:0,reqRecruitTentsDestroyed:0,isSpecial:!1,isDone:!1,isSecret:!1},ctors:{ctor:function(name,description,reqEnemiesKilled,reqUnitsLost,reqFinishedGames,reqCitiesCaptured,reqResourcesRebuilt,reqUnitsRecruited,reqResearchesResearched,reqRecruitTentsBuilt,reqRecruitTentsDestroyed,isSpecial,isSecret){this.$initialize();this.name=name;this.description=description;this.reqEnemiesKilled=reqEnemiesKilled;this.reqUnitsLost=reqUnitsLost;this.reqFinishedGames=reqFinishedGames;this.reqCitiesCaptured=reqCitiesCaptured;this.reqResourcesRebuilt=reqResourcesRebuilt;this.reqUnitsRecruited=reqUnitsRecruited;this.reqResearchesResearched=reqResearchesResearched;this.reqRecruitTentsBuilt=reqRecruitTentsBuilt;this.reqRecruitTentsDestroyed=reqRecruitTentsDestroyed;this.isSecret=isSecret;this.isSpecial=isSpecial;this.isDone=!1}},methods:{CheckAchiev:function(){this.isSpecial||this.isDone||Kingdom.Achievement.enemiesKilled>=this.reqEnemiesKilled&&Kingdom.Achievement.unitsLost>=this.reqUnitsLost&&Kingdom.Achievement.finishedGames>=this.reqFinishedGames&&Kingdom.Achievement.citiesCaptured>=this.reqCitiesCaptured&&Kingdom.Achievement.resourcesRebuilt>=this.reqResourcesRebuilt&&Kingdom.Achievement.unitsRecruited>=this.reqUnitsRecruited&&Kingdom.Achievement.researchesResearched>=this.reqResearchesResearched&&Kingdom.Achievement.recruitTentsBuilt>=this.reqRecruitTentsBuilt&&Kingdom.Achievement.recruitTentsDestroyed>=this.reqRecruitTentsDestroyed&&(this.isDone=!0,Kingdom.App.Announce(System.String.concat("Achieved new achievement: ",this.name)))}}});Bridge.ns("Kingdom.Achievement",$asm.$);Bridge.apply($asm.$.Kingdom.Achievement,{f1:function(x){return System.Int32.parse(x)},f2:function(x){return x.isDone}});Bridge.define("Kingdom.Achievement.eAchievs",{$kind:"enum",statics:{fields:{DestroyThemAll:0,GameOver:1,YouShallNotPass:2,Ironman:3,PowerOfGunpowder:4,Upgrade:5}}});Bridge.define("Kingdom.baseAI",{fields:{me:null}});Bridge.define("Kingdom.App",{main:function(){var fileName=System.String.split(window.location.pathname,[47].map(function(i){return String.fromCharCode(i)})).pop().toString();Kingdom.Achievement.Load();Bridge.referenceEquals(fileName,"game.html")?(document.body.onload=$asm.$.Kingdom.App.f1,document.body.onresize=$asm.$.Kingdom.App.f2):Bridge.referenceEquals(fileName,"Achievement.html")&&(document.getElementById("achievList").innerHTML=Kingdom.Achievement.getAchievHTML(),document.body.onkeydown=$asm.$.Kingdom.App.f3)},statics:{fields:{isSaved:!1,debug:!1,useFog:!1,tiles:0,textureMapTextureLength:null,runAnim:!1,animOneFrame:0,visibleTiles:0,gameEnded:!1,isMenuVisible:!1,audioVolume:0,txMap:null,info_head:null,info_text:null,canvas:null,infoCanvas:null,ctx:null,infoCtx:null,width:0,height:0,_offsetX:0,_offsetY:0,pressedOffsetKeys:null,offsetAnimSpeed:0,isOffsetAnimRunning:!1,fixed30fps:!1,_killedInDefense:0,isAnimRunning:!1,selectedUnit:null,announcement:null,announceAlpha:0,announceTexts:null,announceAnimIsRunning:!1,isAnnounceEnabled:!1,waitAnnounce:0},props:{offsetX:{get:function(){return Kingdom.App._offsetX},set:function(value){value!==Kingdom.App._offsetX&&(Kingdom.App.debug&&console.log(System.String.format("Changing offsetX from {0} to {1}. Max: {2}",Bridge.box(Kingdom.App._offsetX,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(value,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(Kingdom.App.tiles-Kingdom.App.visibleTiles|0,System.Int32))),Kingdom.App._offsetX=value>0?0:-value>=(Kingdom.App.tiles-Kingdom.App.visibleTiles|0)?Kingdom.App.visibleTiles-Kingdom.App.tiles|0:value)}},offsetY:{get:function(){return Kingdom.App._offsetY},set:function(value){value!==Kingdom.App._offsetY&&(Kingdom.App.debug&&console.log(System.String.format("Changing offsetY from {0} to {1}. Max: {2}",Bridge.box(Kingdom.App._offsetY,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(value,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(Kingdom.App.tiles-Kingdom.App.visibleTiles|0,System.Int32))),Kingdom.App._offsetY=value>0?0:-value>=(Kingdom.App.tiles-Kingdom.App.visibleTiles|0)?Kingdom.App.visibleTiles-Kingdom.App.tiles|0:value)}},killedInDefense:{get:function(){return Kingdom.App._killedInDefense},set:function(value){Kingdom.App._killedInDefense=value;Kingdom.App.killedInDefense>=10&&(Kingdom.Achievement.achievements[System.Array.index(Kingdom.Achievement.eAchievs.YouShallNotPass,Kingdom.Achievement.achievements)].isSpecial=!1,Kingdom.Achievement.Check())}}},ctors:{init:function(){this.isSaved=!0;this.debug=!1;this.useFog=!1;this.tiles=64;this.textureMapTextureLength=128;this.runAnim=!0;this.animOneFrame=.1;this.visibleTiles=20;this.gameEnded=!1;this.isMenuVisible=!1;this._offsetX=0;this._offsetY=0;this.pressedOffsetKeys=new(System.Collections.Generic.List$1(System.Char));this.offsetAnimSpeed=.2;this.isOffsetAnimRunning=!1;this.fixed30fps=!1;this.isAnimRunning=!1;this.announceAlpha=1;this.announceTexts=new(System.Collections.Generic.List$1(System.String));this.announceAnimIsRunning=!1;this.isAnnounceEnabled=!0}},methods:{offsetAnimFrame:function(){if(Kingdom.App.isOffsetAnimRunning=!0,Kingdom.App.pressedOffsetKeys.contains(119)&&(Kingdom.App.offsetY+=Kingdom.App.offsetAnimSpeed),Kingdom.App.pressedOffsetKeys.contains(115)&&(Kingdom.App.offsetY-=Kingdom.App.offsetAnimSpeed),Kingdom.App.pressedOffsetKeys.contains(97)&&(Kingdom.App.offsetX+=Kingdom.App.offsetAnimSpeed),Kingdom.App.pressedOffsetKeys.contains(100)&&(Kingdom.App.offsetX-=Kingdom.App.offsetAnimSpeed),Kingdom.App.pressedOffsetKeys.Count>0)Kingdom.App.Draw(),Kingdom.App.fixed30fps?window.setTimeout(Kingdom.App.offsetAnimFrame,33):window.requestAnimationFrame(Kingdom.App.offsetAnimFrame);else{var redraw=!1;Kingdom.App.offsetX!==Bridge.Math.round(Kingdom.App.offsetX,0,6)&&(redraw=!0,Kingdom.App.offsetX=Bridge.Math.round(Kingdom.App.offsetX,0,6));Kingdom.App.offsetY!==Bridge.Math.round(Kingdom.App.offsetY,0,6)&&(redraw=!0,Kingdom.App.offsetY=Bridge.Math.round(Kingdom.App.offsetY,0,6));redraw&&Kingdom.App.Draw();Kingdom.App.isOffsetAnimRunning=!1}},Initialize:function(){var $t,$t1,save,numberOfOpponents,playAi,d,a;Kingdom.App.txMap=Bridge.as(document.getElementById("textureMap"),HTMLImageElement);new Kingdom.textureMap(Kingdom.App.txMap);Kingdom.App.info_head=Bridge.as(document.getElementById("info_head"),HTMLHeadingElement);Kingdom.App.info_text=Bridge.as(document.getElementById("info_text"),HTMLDivElement);Kingdom.App.announcement=Bridge.as(document.getElementById("announcement"),HTMLDivElement);save=($t=window.localStorage.game_continue,$t!=null?$t:"").toString();Kingdom.App.debug=window.localStorage[System.Array.index("kingdom-debug_mode",window.localStorage)]!=null&&Bridge.referenceEquals(window.localStorage[System.Array.index("kingdom-debug_mode",window.localStorage)].toString(),"true");Kingdom.App.useFog=!(window.localStorage[System.Array.index("kingdom-begin_fog",window.localStorage)]!=null&&Bridge.referenceEquals(window.localStorage[System.Array.index("kingdom-begin_fog",window.localStorage)].toString(),"false"));try{Kingdom.App.animOneFrame=System.Double.parse(window.localStorage[System.Array.index("kingdom-move_anim_speed",window.localStorage)].toString());Kingdom.App.animOneFrame<0&&(Kingdom.App.animOneFrame=0);Kingdom.App.animOneFrame>1&&(Kingdom.App.animOneFrame=1);Kingdom.App.animOneFrame===0&&(Kingdom.App.runAnim=!1)}catch($e1){$e1=System.Exception.create($e1)}try{Kingdom.App.offsetAnimSpeed=System.Double.parse(window.localStorage[System.Array.index("kingdom-offset_anim_speed",window.localStorage)].toString());Kingdom.App.offsetAnimSpeed<0&&(Kingdom.App.offsetAnimSpeed=0);Kingdom.App.offsetAnimSpeed>1&&(Kingdom.App.offsetAnimSpeed=1)}catch($e2){$e2=System.Exception.create($e2)}try{Kingdom.App.tiles=System.Int32.parse(window.localStorage[System.Array.index("kingdom-number_of_tiles",window.localStorage)].toString());Kingdom.App.tiles<40&&(Kingdom.App.tiles=40);Kingdom.App.tiles>256&&(Kingdom.App.tiles=256)}catch($e3){$e3=System.Exception.create($e3)}try{Kingdom.App.visibleTiles=System.Int32.parse(window.localStorage[System.Array.index("kingdom-visible_tiles",window.localStorage)].toString());Kingdom.App.visibleTiles<10&&(Kingdom.App.visibleTiles=10);Kingdom.App.visibleTiles>50&&(Kingdom.App.visibleTiles=50)}catch($e4){$e4=System.Exception.create($e4)}numberOfOpponents=1;try{numberOfOpponents=System.Int32.parse(window.localStorage[System.Array.index("kingdom-number_opponents",window.localStorage)].toString());numberOfOpponents<1&&(numberOfOpponents=1);numberOfOpponents>3&&(numberOfOpponents=3)}catch($e5){$e5=System.Exception.create($e5)}playAi=window.localStorage[System.Array.index("kingdom-play_against_ai",window.localStorage)]!=null&&Bridge.referenceEquals(window.localStorage[System.Array.index("kingdom-play_against_ai",window.localStorage)].toString(),"true");Kingdom.App.visibleTiles>Kingdom.App.tiles&&(Kingdom.App.visibleTiles=Kingdom.App.tiles);new Kingdom.Game(Kingdom.App.tiles,save,numberOfOpponents+1|0,playAi);Kingdom.App.canvas=Bridge.as(document.getElementById("canvas"),HTMLCanvasElement);Kingdom.App.infoCanvas=Bridge.as(document.getElementById("infoCanvas"),HTMLCanvasElement);Kingdom.App.ctx=Kingdom.App.canvas.getContext("2d");Kingdom.App.ctx.imageSmoothingEnabled=!1;Kingdom.App.infoCtx=Kingdom.App.infoCanvas.getContext("2d");Kingdom.App.ctx.font="40px sans-serif";Kingdom.App.width=Bridge.Int.div(Kingdom.App.canvas.width,Kingdom.App.visibleTiles)|0;Kingdom.App.height=Bridge.Int.div(Kingdom.App.canvas.height,Kingdom.App.visibleTiles)|0;Kingdom.App.offsetX=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).select($asm.$.Kingdom.App.f5).where($asm.$.Kingdom.App.f6).first().x|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0;Kingdom.App.offsetY=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).select($asm.$.Kingdom.App.f5).where($asm.$.Kingdom.App.f6).first().y|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0;Kingdom.App.Draw();Kingdom.App.canvas.onclick=$asm.$.Kingdom.App.f7;document.onkeydown=$asm.$.Kingdom.App.f10;document.onkeyup=$asm.$.Kingdom.App.f11;document.getElementById("research").onclick=$asm.$.Kingdom.App.f12;document.getElementById("nextTurn").onclick=$asm.$.Kingdom.App.f17;new Kingdom.Pong;Kingdom.App.DisplayPlayerInfo();Kingdom.App.audioVolume=.1;try{d=System.Double.parse(window.localStorage[System.Array.index("kingdom-music_volume",window.localStorage)].toString());d>=0&&d<=1&&(Kingdom.App.audioVolume=d)}catch($e6){$e6=System.Exception.create($e6)}a=Bridge.as(($t1=document.getElementsByTagName("audio"))[System.Array.index(0,$t1)],HTMLAudioElement);a.volume=Kingdom.App.audioVolume;a.autoplay=!0;a.play();Kingdom.App.debug&&console.log("Initialized");document.getElementById("save").onclick=$asm.$.Kingdom.App.f19},CalcInfoWidth:function(){document.getElementById("aside").style.width=System.String.concat((document.body.offsetWidth-Kingdom.App.canvas.offsetWidth|0).toString(),"px")},Draw:function(displayTextInfo,targetX,targetY){var $t,s,x,y,po,p,frame,u,fillStyle,frame1,u1,fillStyle1;if(displayTextInfo===void 0&&(displayTextInfo=!0),targetX===void 0&&(targetX=-1),targetY===void 0&&(targetY=-1),s=new System.Diagnostics.Stopwatch,Kingdom.App.debug&&s.start(),targetX===-1||targetY===-1)for(x=0;x<Kingdom.App.visibleTiles+-Kingdom.App.offsetX+(Kingdom.App.offsetX===0?0:Kingdom.App.offsetX<0?1:-1);x=x+1|0){if(x>=Kingdom.App.tiles)break;for(y=0;y<Kingdom.App.visibleTiles+-Kingdom.App.offsetY+(Kingdom.App.offsetY===0?0:Kingdom.App.offsetY<0?1:-1);y=y+1|0){if(y>=Kingdom.App.tiles)break;if(Kingdom.App.useFog&&($t=Bridge.as(Kingdom.Game.game.Map.get([x,y,0]),Kingdom.Terrain).isFogForPlayers)[System.Array.index(Kingdom.Game.game.playerState,$t)]){po=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.App.textures.cloud);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,po.x,po.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);continue}if(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x,y,0]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),Kingdom.Game.game.Map.get([x,y,1])!=null&&(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x,y,1]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),Bridge.is(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.City)&&displayTextInfo&&Kingdom.App.ctx.fillText(System.String.format("{0} / {1}",Bridge.box(Bridge.as(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.City).currpop,System.Int32),Bridge.box(Bridge.as(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.City).maxpop,System.Int32)),(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height)),Kingdom.Game.game.Map.get([x,y,2])!=null){p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x,y,2]).texture);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);frame=Kingdom.App.textures.unavalibeTile;u=Bridge.as(Kingdom.Game.game.Map.get([x,y,2]),Kingdom.Unit);switch(u.owner.color){case 0:frame=Kingdom.App.textures.border_blue;break;case 1:frame=Kingdom.App.textures.border_red;break;case 2:frame=Kingdom.App.textures.border_green;break;case 3:frame=Kingdom.App.textures.border_yellow}p=Kingdom.textureMap.txMap.getSubImageCoords(u.weaponTexture);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);(Bridge.as(Kingdom.Game.game.Map.get([x,y,2]),Kingdom.Unit).turns>0||Bridge.as(Kingdom.Game.game.Map.get([x,y,2]),Kingdom.Unit).canAttack&&!1)&&(p=Kingdom.textureMap.txMap.getSubImageCoords(frame),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height));displayTextInfo&&(fillStyle=Kingdom.App.ctx.fillStyle,Kingdom.App.ctx.fillStyle=Kingdom.App.InterpolateRedGreenColor(u.hp,u.maxhp),Kingdom.App.ctx.fillRect((x+Kingdom.App.offsetX)*Kingdom.App.width+(Bridge.Int.div(Kingdom.App.width,5)|0),(y+Kingdom.App.offsetY)*Kingdom.App.height+(Bridge.Int.div(Kingdom.App.height,5)|0),15,15),Kingdom.App.ctx.fillStyle=fillStyle)}}}else{var x1=targetX,y1=targetY,p1=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x1,y1,0]).texture);if(Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p1.x,p1.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x1+Kingdom.App.offsetX)*Kingdom.App.width,(y1+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),Kingdom.Game.game.Map.get([x1,y1,1])!=null&&(p1=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x1,y1,1]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p1.x,p1.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x1+Kingdom.App.offsetX)*Kingdom.App.width,(y1+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height)),Kingdom.Game.game.Map.get([x1,y1,2])!=null){p1=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([x1,y1,2]).texture);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p1.x,p1.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x1+Kingdom.App.offsetX)*Kingdom.App.width,(y1+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);frame1=Kingdom.App.textures.unavalibeTile;u1=Bridge.as(Kingdom.Game.game.Map.get([x1,y1,2]),Kingdom.Unit);switch(u1.owner.color){case 0:frame1=Kingdom.App.textures.border_blue;break;case 1:frame1=Kingdom.App.textures.border_red;break;case 2:frame1=Kingdom.App.textures.border_green;break;case 3:frame1=Kingdom.App.textures.border_yellow}p1=Kingdom.textureMap.txMap.getSubImageCoords(u1.weaponTexture);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p1.x,p1.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x1+Kingdom.App.offsetX)*Kingdom.App.width,(y1+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);(Bridge.as(Kingdom.Game.game.Map.get([x1,y1,2]),Kingdom.Unit).turns>0||Bridge.as(Kingdom.Game.game.Map.get([x1,y1,2]),Kingdom.Unit).canAttack&&!1)&&(p1=Kingdom.textureMap.txMap.getSubImageCoords(frame1),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p1.x,p1.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x1+Kingdom.App.offsetX)*Kingdom.App.width,(y1+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height));displayTextInfo&&(fillStyle1=Kingdom.App.ctx.fillStyle,Kingdom.App.ctx.fillStyle=Kingdom.App.InterpolateRedGreenColor(u1.hp,u1.maxhp),Kingdom.App.ctx.fillRect((x1+Kingdom.App.offsetX)*Kingdom.App.width+(Bridge.Int.div(Kingdom.App.width,5)|0),(y1+Kingdom.App.offsetY)*Kingdom.App.height+(Bridge.Int.div(Kingdom.App.height,5)|0),15,15),Kingdom.App.ctx.fillStyle=fillStyle1)}}Kingdom.App.debug&&(s.stop(),console.log(System.String.concat(System.String.format("Draw finished in ",null),s.milliseconds()," ms")))},DrawPossibleUnitMoves:function(unit){var $t,x,y,p;for(Kingdom.App.debug&&console.log("Drawing possible unit moves"),x=0;x<Kingdom.App.visibleTiles+-Kingdom.App.offsetX+(Kingdom.App.offsetX===0?0:Kingdom.App.offsetX<0?1:-1);x=x+1|0){if(x>=Kingdom.App.tiles)break;for(y=0;y<Kingdom.App.visibleTiles+-Kingdom.App.offsetY+(Kingdom.App.offsetY===0?0:Kingdom.App.offsetY<0?1:-1);y=y+1|0){if(y>=Kingdom.App.tiles)break;(Kingdom.App.useFog&&($t=Bridge.as(Kingdom.Game.game.Map.get([x,y,0]),Kingdom.Terrain).isFogForPlayers)[System.Array.index(Kingdom.Game.game.playerState,$t)]||Math.max(Math.abs(unit.x-x|0),Math.abs(unit.y-y|0))>unit.turns&&(!unit.canAttackToSomebody(x,y)||Math.max(Math.abs(unit.x-x|0),Math.abs(unit.y-y|0))>(unit.turns+1|0))||!unit.canMove(x,y,unit.owner))&&(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.App.textures.unavalibeTile),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height))}}},Anim:function(xFrom,yFrom,xTo,yTo,unit,endOfAnimTrigger){var texture,p,frame;if(!Kingdom.App.runAnim){endOfAnimTrigger.call();return}Kingdom.App.debug&&console.log(System.String.format("Anim started. xFrom: {0}, yFrom: {1}, xTo: {2}, yTo: {3}",Bridge.box(xFrom,System.Int32),Bridge.box(yFrom,System.Int32),Bridge.box(xTo,System.Int32),Bridge.box(yTo,System.Int32)));Kingdom.App.isAnimRunning=!0;texture=System.Array.init([unit.texture,unit.weaponTexture],Kingdom.App.textures);Kingdom.App.Draw(!1);p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([xTo,yTo,0]).texture);Kingdom.App.ctx.clearRect((xTo+Kingdom.App.offsetX)*Kingdom.App.width,(yTo+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(xTo+Kingdom.App.offsetX)*Kingdom.App.width,(yTo+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height);Kingdom.Game.game.Map.get([xTo,yTo,1])!=null&&(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([xTo,yTo,1]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(xTo+Kingdom.App.offsetX)*Kingdom.App.width,(yTo+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height));frame=function(){Kingdom.App.AnimFrame(texture,xFrom,yFrom,xTo,yTo,xFrom,yFrom,unit,endOfAnimTrigger)};Kingdom.App.fixed30fps?window.setTimeout(frame,33):window.requestAnimationFrame(frame)},AnimFrame:function(texture,xFrom,yFrom,xTo,yTo,x,y,unit,endOfAnimTrigger){var $t,i,j,t,xIsThere,yIsThere,frame;Kingdom.App.debug&&console.log(System.String.format("AnimFrame called with x: {0} and y: {1}",Bridge.box(x,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(y,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode)));var nX=Bridge.Int.clip32(Bridge.Math.round(x,0,6)),nY=Bridge.Int.clip32(Bridge.Math.round(y,0,6)),p=new Kingdom.Point;for(i=nX-1|0;i<=(nX+1|0);i=i+1|0)if(!(i<0)&&!(i>=Kingdom.App.tiles))for(j=nY-1|0;j<=(nY+1|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([i,j,0]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(i+Kingdom.App.offsetX)*Kingdom.App.width,(j+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),Kingdom.Game.game.Map.get([i,j,1])!=null&&(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([i,j,1]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(i+Kingdom.App.offsetX)*Kingdom.App.width,(j+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height)),Kingdom.Game.game.Map.get([i,j,2])==null||Bridge.referenceEquals(Kingdom.Game.game.Map.get([i,j,2]),unit)||(p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.Game.game.Map.get([i,j,2]).texture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(i+Kingdom.App.offsetX)*Kingdom.App.width,(j+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),p=Kingdom.textureMap.txMap.getSubImageCoords(Bridge.as(Kingdom.Game.game.Map.get([i,j,2]),Kingdom.Unit).weaponTexture),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(i+Kingdom.App.offsetX)*Kingdom.App.width,(j+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height)));x<xTo?x+=Kingdom.App.animOneFrame:x>xTo&&(x-=Kingdom.App.animOneFrame);y<yTo?y+=Kingdom.App.animOneFrame:y>yTo&&(y-=Kingdom.App.animOneFrame);Kingdom.App.debug&&console.log(System.String.format("AnimFrame extended to x: {0} and y: {1}",Bridge.box(x,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(y,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode)));$t=Bridge.getEnumerator(texture);try{while($t.moveNext())t=$t.Current,p=Kingdom.textureMap.txMap.getSubImageCoords(t),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(x+Kingdom.App.offsetX)*Kingdom.App.width,(y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}xIsThere=!1;yIsThere=!1;Math.abs(x-xTo)<=Kingdom.App.animOneFrame&&(xIsThere=!0,x=xTo);Math.abs(y-yTo)<=Kingdom.App.animOneFrame&&(yIsThere=!0,y=yTo);xIsThere&&yIsThere?(Kingdom.App.debug&&console.log("Anim ended"),Kingdom.App.isAnimRunning=!1,endOfAnimTrigger.call()):(frame=function(){Kingdom.App.AnimFrame(texture,xFrom,yFrom,xTo,yTo,x,y,unit,endOfAnimTrigger)},Kingdom.App.fixed30fps?window.setTimeout(frame,33):window.requestAnimationFrame(frame))},ClickTo:function(x,y,ctrlWasPressed,altWasPressed){var toDisplay;if(!Kingdom.App.isAnimRunning&&!Kingdom.App.isOffsetAnimRunning&&!Kingdom.App.isMenuVisible){var xTileD=Math.floor(x/(Kingdom.App.canvas.offsetWidth/Kingdom.App.visibleTiles))+-Kingdom.App.offsetX,yTileD=Math.floor(y/(Kingdom.App.canvas.offsetHeight/Kingdom.App.visibleTiles))+-Kingdom.App.offsetY,xTile=Bridge.Int.clip32(Math.floor(xTileD)),yTile=Bridge.Int.clip32(Math.floor(yTileD));Kingdom.App.debug&&console.log(System.String.format("Clicked to {0}, {1}. Tiles: {2}, {3}. CTRL: {4}. ALT: {5}",Bridge.box(x,System.Int32),Bridge.box(y,System.Int32),Bridge.box(xTile,System.Int32),Bridge.box(yTile,System.Int32),Bridge.box(ctrlWasPressed,System.Boolean,$box_.System.Boolean.toString),Bridge.box(altWasPressed,System.Boolean,$box_.System.Boolean.toString)));toDisplay=Kingdom.Game.game.Map.get([xTile,yTile,0]);Kingdom.Game.game.Map.get([xTile,yTile,1])!=null&&Kingdom.Game.game.Map.get([xTile,yTile,2])==null||Kingdom.Game.game.Map.get([xTile,yTile,1])!=null&&Kingdom.Game.game.Map.get([xTile,yTile,2])!=null&&ctrlWasPressed?toDisplay=Kingdom.Game.game.Map.get([xTile,yTile,1]):Kingdom.Game.game.Map.get([xTile,yTile,2])!=null&&(toDisplay=Kingdom.Game.game.Map.get([xTile,yTile,2]));Kingdom.App.DisplayInfoAbout(toDisplay,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),x,y,ctrlWasPressed,altWasPressed)}},DisplayInfoAbout:function(obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed){var $t,$t1,bX,bY,p,u,c,r;if(Kingdom.App.debug&&console.log(System.String.format("Displaying info about {0}",obj)),altWasPressed||refreshCtrl||Kingdom.App.selectedUnit==null||Bridge.referenceEquals(Kingdom.App.selectedUnit,obj))Kingdom.App.selectedUnit=null;else{bX=Kingdom.App.selectedUnit.x;bY=Kingdom.App.selectedUnit.y;Kingdom.App.selectedUnit.Move(obj.x,obj.y,currentPlayer)?Kingdom.App.Anim(bX,bY,obj.x,obj.y,Kingdom.App.selectedUnit,function(){for(var j,i=obj.x-1|0;i<=(obj.x+1|0);i=i+1|0)if(!(i<0)&&!(i>=Kingdom.App.tiles))for(j=obj.y-1|0;j<=(obj.y+1|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||Kingdom.App.Draw(!0,i,j);Kingdom.App.selectedUnit.turns>0||Kingdom.App.selectedUnit.canAttackToSomebody()?(Kingdom.App.DrawPossibleUnitMoves(Kingdom.App.selectedUnit),Kingdom.App.DisplayInfoAbout(obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed)):(Kingdom.App.selectedUnit=null,Kingdom.App.Draw())}):(Kingdom.App.debug&&console.log("Selected unit cannot move here"),Kingdom.App.ClickTo(refreshX,refreshY,refreshCtrl,!0));return}if(Kingdom.App.Draw(),p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.App.textures.border),Kingdom.App.ctx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,(obj.x+Kingdom.App.offsetX)*Kingdom.App.width,(obj.y+Kingdom.App.offsetY)*Kingdom.App.height,Kingdom.App.width,Kingdom.App.height),Kingdom.App.info_head.innerHTML="",Kingdom.App.info_text.innerHTML="",p=Kingdom.textureMap.txMap.getSubImageCoords(obj.texture),Kingdom.App.infoCtx.clearRect(0,0,64,64),Kingdom.App.infoCtx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,0,0,64,64),Kingdom.App.useFog&&($t=Bridge.as(Kingdom.Game.game.Map.get([obj.x,obj.y,0]),Kingdom.Terrain).isFogForPlayers)[System.Array.index(Kingdom.Game.game.playerState,$t)])p=Kingdom.textureMap.txMap.getSubImageCoords(Kingdom.App.textures.cloud),Kingdom.App.infoCtx.clearRect(0,0,64,64),Kingdom.App.infoCtx.drawImage(Kingdom.App.txMap,p.x,p.y,Kingdom.App.textureMapTextureLength,Kingdom.App.textureMapTextureLength,0,0,64,64),Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Fog<\/strong><br/>Unknown terrain, move units next to this tile to reveal secrets hidden by mysterious fog",$t1));else if(Bridge.is(obj,Kingdom.Terrain))switch(Bridge.as(obj,Kingdom.Terrain).type){case Kingdom.Terrain.Types.Land:Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Land<\/strong><br/>Basic terrain for all units and most resources. Most units and all cities have to placed on this terrain.<br />\r\n                                                                                    Units req. [Walk] skill to move on this terrain",$t1));break;case Kingdom.Terrain.Types.Mountain:Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Mountain<\/strong><br/>Special type of 'Land' terrain, most resources cannot appear on this terrain. Only few units can safely move over highest mountains in the Realm.<br />\r\n                                                                                      Units req. both [Walk] and [Climb] skills to move on this terrain",$t1));break;case Kingdom.Terrain.Types.Sea:Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Sea<\/strong><br/>Water, as you expect. Only [Fish] resource can appear there, no cities. Almost no units can stay here over turn. All units fight weaker when standing in this terrain.<br />\r\n                                                                                    Units req. [Swim] skill to move on this terrain",$t1))}else Bridge.is(obj,Kingdom.Resource)?(Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Resource<\/strong><br/>Resource is something, that you can use to boost production in your cities.<br />\r\n                                                                               Every upgraded resource gives 'prosperity' points to target city. City with enough\r\n                                                                               prosperity grow, which makes their output production bigger.",$t1)),Bridge.as(obj,Kingdom.Resource).ready||Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML=System.String.format("Rebuild ({0})",Bridge.box(Bridge.as(obj,Kingdom.Resource).cost,System.Int32)),$t1.onclick=function(){Kingdom.App.isMenuVisible||(Bridge.as(obj,Kingdom.Resource).Rebuild()?(Kingdom.App.ClickTo(refreshX,refreshY,refreshCtrl,altWasPressed),Kingdom.App.DisplayPlayerInfo()):Kingdom.App.Announce("You cannot rebuild this resource!"))},$t1))):Bridge.is(obj,Kingdom.Unit)?(u=Bridge.as(obj,Kingdom.Unit),Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML=System.String.concat(System.String.format("HP: {0} / {1}<br />",Bridge.box(u.hp,System.Int32),Bridge.box(u.maxhp,System.Int32)),"<strong>",u.name,"<\/strong><br/>This is unit (",u.name,"). Units can move, attack, capture cities and build recruit tents.<br />\r\n                                                                               To capture a city, move any unit to enemy city. Wait there for a while, then select the city (ctrl+click)\r\n                                                                               and click 'Capture' button. To move, just click any tile near this one. If you want to display info about tile without moving your unit there, alt+click target tile.<br /><br />\r\n                                                                               This unit has following abilities:<br />",u.getAbilitiesInfo()),$t1)),Bridge.as(Kingdom.Game.game.Map.get([obj.x,obj.y,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Land&&Bridge.referenceEquals(u.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))&&Kingdom.Game.game.Map.get([u.x,u.y,1])==null&&Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML=System.String.format("Build Recruit Tent ({0})",Bridge.box(Kingdom.RecruitTent.price,System.Int32)),$t1.onclick=function(){if(!Kingdom.App.isMenuVisible){var r=Kingdom.RecruitTent.Build(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),obj.x,obj.y);r==null?Kingdom.App.Announce("Recruit Tent cannot be built"):(Kingdom.Game.game.Map.set([obj.x,obj.y,1],r),Kingdom.App.DisplayInfoAbout(obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed),Kingdom.App.DisplayPlayerInfo(),Kingdom.App.Draw(!0,r.x,r.y))}},$t1)),Kingdom.App.selectedUnit=u,Kingdom.App.DrawPossibleUnitMoves(Kingdom.App.selectedUnit)):Bridge.is(obj,Kingdom.City)?(c=Bridge.as(obj,Kingdom.City),Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>City<\/strong><br/>This is the most important thing in this game. Cities can be captured by enemy units. <br />\r\n                                                                               This city gives its owner "+c.production+" production each turn and allows him\r\n                                                                               to recruit new units here. City also heals all friendly units inside by 2HP per turn.",$t1)),c.canCapture()&&Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML="Capture",$t1.onclick=function(){Kingdom.App.isMenuVisible||(c.Capture()?Kingdom.App.ClickTo(refreshX,refreshY,refreshCtrl,altWasPressed):Kingdom.App.Announce("You cannot capture this city"))},$t1)),Bridge.referenceEquals(c.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))&&Kingdom.Game.game.Map.get([c.x,c.y,2])==null&&Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML="Recruit",$t1.onclick=function(){Kingdom.App.Recruit(-1,c.x,c.y)},$t1)),Bridge.referenceEquals(c.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))&&Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML=System.String.format("{0}",c.currentlyBuilding==null?"Build":System.String.format("Building {0} ({1})",c.currentlyBuilding.name,Bridge.box(c.currentlyBuilding.turnsRemaining,System.Int32))),$t1.onclick=function(){Kingdom.App.BuildSomething(c)},$t1))):Bridge.is(obj,Kingdom.RecruitTent)&&(r=Bridge.as(obj,Kingdom.RecruitTent),Kingdom.App.info_text.appendChild(($t1=document.createElement("p"),$t1.innerHTML="<strong>Recruit Tent<\/strong><br/>Recruit Tent is building, that can be build by any unit for "+Kingdom.RecruitTent.price+" resources. Here, you can recruit new units and heal them. <br />\r\n                                                                               Recruit Tent heals units for 1 HP per turn. Using Recruit Tents, you can recruit units anywhere on the battlefield\r\n                                                                               for 150% of the original price.<br />\r\n                                                                               When any enemy unit moves to Recruit Tent, it is automatically destroyed and enemy who destroyed the tent gets 4 resources.",$t1)),Bridge.referenceEquals(r.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))&&Kingdom.Game.game.Map.get([r.x,r.y,2])==null&&Kingdom.App.info_text.appendChild(($t1=document.createElement("button"),$t1.innerHTML="Recruit",$t1.onclick=function(){Kingdom.App.Recruit(-1,r.x,r.y,!0)},$t1)))},AnimSteps:function(x,y,p,a,obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed){console.log(p.pth);console.log(System.String.format("Anim({0}, {1}, {2}, {3}, selectedUnit",Bridge.box(x,System.Int32),Bridge.box(y,System.Int32),Bridge.box(p.pth.getItem(a).x,System.Int32),Bridge.box(p.pth.getItem(a).y,System.Int32)));Kingdom.App.Anim(x,y,p.pth.getItem(a).x,p.pth.getItem(a).y,Kingdom.App.selectedUnit,function(){for(var j,i=obj.x-1|0;i<=(obj.x+1|0);i=i+1|0)if(!(i<0)&&!(i>=Kingdom.App.tiles))for(j=obj.y-1|0;j<=(obj.y+1|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||Kingdom.App.Draw(!0,i,j);Kingdom.App.selectedUnit.turns>0||Kingdom.App.selectedUnit.canAttackToSomebody()?(Kingdom.App.DrawPossibleUnitMoves(Kingdom.App.selectedUnit),Kingdom.App.DisplayInfoAbout(obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed)):(Kingdom.App.selectedUnit=null,Kingdom.App.Draw());a<(p.pth.Count-1|0)&&Kingdom.App.AnimSteps(p.pth.getItem(a).x,p.pth.getItem(a).y,p,a+1|0,obj,currentPlayer,refreshX,refreshY,refreshCtrl,altWasPressed)})},DisplayPlayerInfo:function(){var $t,d=Bridge.as(document.getElementById("playerInfo"),HTMLDivElement),p=Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),but;d.innerHTML="";d.appendChild(($t=document.createElement("p"),$t.innerHTML=System.String.format("<span style='color: {0}'>{1}<\/span> ({2} Resources) (+{3})",p.color===0?"blue":p.color===1?"red":p.color===2?"green":"orange",p.name,Bridge.box(p.resources,System.Int32),Bridge.box(System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).select($asm.$.Kingdom.App.f5).where($asm.$.Kingdom.App.f6).select($asm.$.Kingdom.App.f20).sum()+System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f21).select($asm.$.Kingdom.App.f22).where($asm.$.Kingdom.App.f23).select($asm.$.Kingdom.App.f24).sum()|0,System.Int32)),$t));but=Bridge.as(document.getElementById("research"),HTMLButtonElement);but.innerHTML=p.currentlyResearching==null?"Research":System.String.format("Researching {0} ({1})",p.currentlyResearching.name,Bridge.box(p.currentlyResearching.turnsRemaining,System.Int32))},Recruit:function(unitId,x,y,isRecruitTent){var $t,$t1,$t2,$t3,recruitBox,recruitButCancel,wrapper,i,i1,t,u1;if(isRecruitTent===void 0&&(isRecruitTent=!1),!Kingdom.App.isMenuVisible)if(unitId===-1){Kingdom.App.CloseRecruitBuildResearch();recruitBox=($t=document.createElement("div"),$t.innerHTML=System.String.format("<h1>Recruit<\/h1><p>You have {0} resources<\/p>",Bridge.box(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState).resources,System.Int32)),$t.id="recruitBox",$t);recruitBox.setAttribute("class","recruitBox");recruitButCancel=($t=document.createElement("button"),$t.innerHTML="X",$t.onclick=$asm.$.Kingdom.App.f25,$t);recruitButCancel.setAttribute("class","recruitStornoBut");recruitBox.appendChild(recruitButCancel);wrapper=document.createElement("div");wrapper.setAttribute("class","wrapper");recruitBox.appendChild(wrapper);i=0;$t=Bridge.getEnumerator(Kingdom.Unit.units);try{while($t.moveNext()){var u=$t.Current,j={v:i},n=document.createElement("div");n.appendChild(($t1=document.createElement("button"),$t1.innerHTML=System.String.format("{0} ({1})",u.name,Bridge.box(Bridge.Int.clip32(u.cost*(isRecruitTent?1.5:1)),System.Int32)),$t1.onclick=function($me,j){return function(){Kingdom.App.Recruit(j.v,x,y,isRecruitTent)}}(this,j),$t1));wrapper.appendChild(n);i=i+1|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}document.body.appendChild(recruitBox)}else{var pattern=Kingdom.Unit.units[System.Array.index(unitId,Kingdom.Unit.units)],p=Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),hasAllResearches=System.Linq.Enumerable.from(pattern.reqResearch).count()===0;if(!hasAllResearches){$t1=Bridge.getEnumerator(pattern.reqResearch);try{while($t1.moveNext())if(i1=$t1.Current,p.researches[System.Array.index(i1,p.researches)].state===Kingdom.Research.States.Researched)hasAllResearches=!0;else{hasAllResearches=!1;break}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$dispose()}}if(hasAllResearches&&p.resources>=Bridge.Int.clip32(pattern.cost*(isRecruitTent?1.5:1))&&Kingdom.Game.game.Map.get([x,y,2])==null&&Bridge.referenceEquals(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),Bridge.as(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.OwnerObject).owner)){t=Kingdom.App.textures.unavalibeTile;switch(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState).color){case 0:t=Kingdom.App.textures.unit_basic_blue;break;case 1:t=Kingdom.App.textures.unit_basic_red;break;case 2:t=Kingdom.App.textures.unit_basic_green;break;case 3:t=Kingdom.App.textures.unit_basic_yellow}p.resources=p.resources-Bridge.Int.clip32(pattern.cost*(isRecruitTent?1.5:1))|0;u1=Kingdom.Unit.getUnit(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),t,pattern,x,y);Bridge.is(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.City)&&($t2=Bridge.as(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.City).buildings)[System.Array.index(Kingdom.Building.eBuildings.Barracks,$t2)].state===Kingdom.Building.states.Builded&&(u1.hp=u1.hp+5|0,u1.maxhp=u1.maxhp+5|0);Kingdom.Game.game.Map.set([x,y,2],u1);Bridge.referenceEquals(u1.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.unitsRecruited=Kingdom.Achievement.unitsRecruited+1|0,Kingdom.Achievement.Check());Kingdom.App.DisplayPlayerInfo();($t3=document.getElementsByClassName("recruitBox"))[System.Array.index(0,$t3)].remove();Kingdom.App.Draw(!0,x,y)}else hasAllResearches?p.resources<Bridge.Int.clip32(pattern.cost*(isRecruitTent?1.5:1))?Kingdom.App.Announce("You do not have enough resources required to build this unit"):Bridge.referenceEquals(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),Bridge.as(Kingdom.Game.game.Map.get([x,y,1]),Kingdom.OwnerObject).owner)?Kingdom.App.Announce("You cannot recruit this unit"):Kingdom.App.Announce("You do not own this tile"):Kingdom.App.Announce("This unit requires some researches. Research them and try it again")}},CloseRecruitBuildResearch:function(){try{document.getElementById("researchDiv").remove()}catch($e1){$e1=System.Exception.create($e1)}try{document.getElementById("recruitBox").remove()}catch($e2){$e2=System.Exception.create($e2)}},ResearchSomething:function(id){var $t,$t1,p,outerDiv,wrapper,i,r,reqRes,q,d,div;if(id===void 0&&(id=-1),!Kingdom.App.isMenuVisible)if(p=Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),id===-1){Kingdom.App.CloseRecruitBuildResearch();outerDiv=document.createElement("div");outerDiv.setAttribute("id","researchDiv");outerDiv.innerHTML=System.String.format("<button class='recruitStornoBut' onclick='document.getElementById(\"researchDiv\").remove();'>X<\/button><h2>Research<\/h2><p>Current level of science: {0}<\/p>{1}",Bridge.box(p.researchMultiplier,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),p.currentlyResearching==null?"":System.String.format("<p>{0} <progress value={1} max={2}><\/progress><\/p>",p.currentlyResearching.name,Bridge.box(p.currentlyResearching.maximumTurnsRemaining-p.currentlyResearching.turnsRemaining|0,System.Int32),Bridge.box(p.currentlyResearching.maximumTurnsRemaining,System.Int32)));wrapper=document.createElement("datalist");wrapper.setAttribute("class","techtreeWrapper");i=0;$t=Bridge.getEnumerator(p.researches);try{while($t.moveNext()){r=$t.Current;reqRes="<br /><strong>Requirements:<\/strong>";$t1=Bridge.getEnumerator(r.reqResearch);try{while($t1.moveNext())(q=$t1.Current,p.researches[System.Array.index(q,p.researches)].state!==Kingdom.Research.States.Researched)&&(reqRes=System.String.concat(reqRes,System.String.format("<br />{0}",p.researches[System.Array.index(q,p.researches)].name)))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$dispose()}reqRes=System.String.concat(reqRes,"<br />");var scienceLevel=p.researchMultiplier>=r.reqScienceLevel?"":System.String.format("You need {0} science level",Bridge.box(r.reqScienceLevel,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode)),but=document.createElement("button"),a={v:Bridge.identity(i,i=i+1|0)};but.onclick=function($me,a){return function(){Kingdom.App.ResearchSomething(a.v)}}(this,a);but.innerHTML=r.state===Kingdom.Research.States.Researched?System.String.format("{0} (Researched)",r.name):r.state===Kingdom.Research.States.InProgress?System.String.format("{0} (Researching...)",r.name):System.String.format("{0} (Cost: {1}, Turns: {2})",r.name,Bridge.box(r.cost,System.Int32),Bridge.box(r.turnsRemaining,System.Int32));d=document.createElement("div");d.appendChild(but);div=document.createElement("div");div.innerHTML=System.String.format("{0}{1}{2}",r.description,reqRes,scienceLevel);d.appendChild(div);wrapper.appendChild(d)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}outerDiv.appendChild(wrapper);document.body.appendChild(outerDiv)}else p.researches[System.Array.index(id,p.researches)].StartResearch(p)&&(Kingdom.App.CloseRecruitBuildResearch(),Kingdom.App.DisplayPlayerInfo())},BuildSomething:function(c,id){var $t,$t1,p,outerDiv,wrapper,i,b,reqRes,q,but,a,d,div;if(id===void 0&&(id=-1),p=Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),id===-1){Kingdom.App.CloseRecruitBuildResearch();outerDiv=document.createElement("div");outerDiv.setAttribute("class","buildDiv");outerDiv.setAttribute("id","researchDiv");outerDiv.innerHTML=System.String.format("<button class='recruitStornoBut' onclick='document.getElementById(\"researchDiv\").remove();'>X<\/button><h2>Build<\/h2><p>Resources: {0}<\/p>{1}",Bridge.box(p.resources,System.Int32),c.currentlyBuilding==null?"":System.String.format("<p>{0} <progress value={1} max={2}><\/progress><\/p>",c.currentlyBuilding.name,Bridge.box(c.currentlyBuilding.maxTurnsRemaining-c.currentlyBuilding.turnsRemaining|0,System.Int32),Bridge.box(c.currentlyBuilding.maxTurnsRemaining,System.Int32)));wrapper=document.createElement("datalist");wrapper.setAttribute("class","techtreeWrapper");i=0;$t=Bridge.getEnumerator(c.buildings);try{while($t.moveNext()){b=$t.Current;reqRes="<br /><strong>Requirements:<\/strong>";$t1=Bridge.getEnumerator(b.researchReq);try{while($t1.moveNext())(q=$t1.Current,p.researches[System.Array.index(q,p.researches)].state!==Kingdom.Research.States.Researched)&&(reqRes=System.String.concat(reqRes,System.String.format("<br />{0}",p.researches[System.Array.index(q,p.researches)].name)))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$dispose()}reqRes=System.String.concat(reqRes,"<br />");but=document.createElement("button");a={v:Bridge.identity(i,i=i+1|0)};but.onclick=function($me,a){return function(){Kingdom.App.BuildSomething(c,a.v)}}(this,a);but.innerHTML=b.state===Kingdom.Building.states.Builded?System.String.format("{0} (Built)",b.name):b.state===Kingdom.Building.states.InProgress?System.String.format("{0} (Building...)",b.name):System.String.format("{0} (Cost: {1}, Turns: {2})",b.name,Bridge.box(b.cost,System.Int32),Bridge.box(b.turnsRemaining,System.Int32));d=document.createElement("div");d.appendChild(but);div=document.createElement("div");div.innerHTML=System.String.format("{0}{1}",b.description,reqRes);d.appendChild(div);wrapper.appendChild(d)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}outerDiv.appendChild(wrapper);document.body.appendChild(outerDiv)}else c.buildings[System.Array.index(id,c.buildings)].StartBuilding(c)&&(Kingdom.App.CloseRecruitBuildResearch(),Kingdom.App.DisplayPlayerInfo())},InterpolateRedGreenColor:function(from,to){var green=255*(from/to);return System.String.format("rgb({0}, {1}, 0)",Bridge.box(Bridge.Int.clip32(255-green),System.Int32),Bridge.box(Bridge.Int.clip32(green),System.Int32))},Announce:function(text,persistent){var $t,lightbox,lbContent;(persistent===void 0&&(persistent=!1),Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState).currAI==null)&&Kingdom.App.isAnnounceEnabled&&(persistent?(Kingdom.App.debug&&console.log(System.String.format("Announce: {0} (persistent)",text)),lightbox=($t=document.createElement("div"),$t.className="lightbox",$t),lbContent=($t=document.createElement("div"),$t.className="lightboxContent",$t.innerHTML=text,$t),lightbox.appendChild(lbContent),document.body.appendChild(lightbox)):(Kingdom.App.announceTexts.add(text),Kingdom.App.announceAnimIsRunning||Kingdom.App.runAnnounceAnim()))},runAnnounceAnim:function(){var text=System.Linq.Enumerable.from(Kingdom.App.announceTexts).first(),p;Kingdom.App.announceAnimIsRunning=!0;Kingdom.App.debug&&console.log(System.String.format("Announce: {0} (non persistent)",text));Kingdom.App.announcement.innerHTML="";Kingdom.App.announcement.style.setProperty("display","initial");p=document.createElement("p");p.innerHTML=text;p.setAttribute("style","color: black");Kingdom.App.announcement.appendChild(p);Kingdom.App.announcement.setAttribute("style",'position:absolute;top: 10%;text-align: center;width: 100%;z-index: 100;oncontextmenu = "return false;";background-color: rgba(227, 227, 277, 1)');Kingdom.App.announceAlpha=1;Kingdom.App.waitAnnounce=.5;Kingdom.App.announceTexts.remove(text);window.setTimeout(Kingdom.App.AnnounceFrame,15)},AnnounceFrame:function(){Kingdom.App.debug&&console.log(System.String.format("Announce frame called with wait: {0} and alpha: {1}",Bridge.box(Kingdom.App.waitAnnounce,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(Kingdom.App.announceAlpha,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode)));Kingdom.App.waitAnnounce>0?Kingdom.App.waitAnnounce-=.005:Kingdom.App.announceAlpha-=.03;Kingdom.App.announcement.setAttribute("style",System.String.format('position:absolute;top: 10%;text-align: center;width: 100%;z-index: 100;oncontextmenu = "return false;";color: rgba(0, 0, 0, {0});background-color: rgba(227, 227, 277, {1})',Bridge.box(Kingdom.App.announceAlpha,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(Kingdom.App.announceAlpha,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode)));Kingdom.App.announceAlpha>0?window.setTimeout(Kingdom.App.AnnounceFrame,15):(Kingdom.App.announceAnimIsRunning=!1,Kingdom.App.announceTexts.Count>0?Kingdom.App.runAnnounceAnim():Kingdom.App.announcement.style.setProperty("display","none"))}}}});Bridge.ns("Kingdom.App",$asm.$);Bridge.apply($asm.$.Kingdom.App,{f1:function(){Kingdom.App.Initialize();Kingdom.App.CalcInfoWidth()},f2:function(){Kingdom.App.CalcInfoWidth()},f3:function(ev){Bridge.referenceEquals(ev.key,"Escape")&&eval("window.location = 'index.html'")},f4:function(x){return Bridge.is(x,Kingdom.City)},f5:function(x){return Bridge.as(x,Kingdom.City)},f6:function(x){return Bridge.referenceEquals(x.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))},f7:function(ev){Kingdom.App.ClickTo(ev.layerX,ev.layerY,ev.ctrlKey,ev.altKey)},f8:function(){var text=Kingdom.SaveManager.Save();window.localStorage.game_continue=text;Kingdom.App.isSaved=!0;document.getElementById("loadingScreen").setAttribute("style","display: none;");eval("window.location = 'index.html';")},f9:function(){eval("window.location = 'index.html';")},f10:function(ev){var $t1,$t2,menu,innerMenu,p,input;if(Kingdom.App.isMenuVisible){Bridge.referenceEquals(ev.key,"Escape")&&(Kingdom.App.isMenuVisible=!1,($t1=document.getElementsByClassName("gameEscMenu"))[System.Array.index(0,$t1)].remove());return}Bridge.referenceEquals(ev.key,"w")&&!Kingdom.App.pressedOffsetKeys.contains(119)&&Kingdom.App.pressedOffsetKeys.add(119);Bridge.referenceEquals(ev.key,"s")&&!Kingdom.App.pressedOffsetKeys.contains(115)&&Kingdom.App.pressedOffsetKeys.add(115);Bridge.referenceEquals(ev.key,"a")&&!Kingdom.App.pressedOffsetKeys.contains(97)&&Kingdom.App.pressedOffsetKeys.add(97);Bridge.referenceEquals(ev.key,"d")&&!Kingdom.App.pressedOffsetKeys.contains(100)&&Kingdom.App.pressedOffsetKeys.add(100);Bridge.referenceEquals(ev.key,"Escape")&&(Kingdom.App.isMenuVisible=!0,menu=document.createElement("div"),menu.className="gameEscMenu",innerMenu=document.createElement("div"),innerMenu.appendChild(($t2=document.createElement("h2"),$t2.innerHTML="Menu",$t2)),innerMenu.appendChild(($t2=document.createElement("button"),$t2.innerHTML="Back to Game",$t2.onclick=function(){menu.remove();Kingdom.App.isMenuVisible=!1},$t2)),innerMenu.appendChild(($t2=document.createElement("button"),$t2.innerHTML="Save and Exit",$t2.onclick=function(){document.getElementById("loadingScreen").setAttribute("style","display: block;");document.getElementById("details").innerHTML="This will take a while. I have to save "+((System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).count()+Kingdom.Game.game.players.Count|0)+1|0)+" objects";menu.remove();window.setTimeout($asm.$.Kingdom.App.f8,500)},$t2)),innerMenu.appendChild(($t2=document.createElement("button"),$t2.innerHTML="Exit to Main Menu",$t2.onclick=$asm.$.Kingdom.App.f9,$t2)),innerMenu.appendChild(document.createElement("hr")),innerMenu.appendChild(($t2=document.createElement("h2"),$t2.innerHTML="Quick Settings",$t2)),innerMenu.appendChild(($t2=document.createElement("p"),$t2.innerHTML="Music Volume: <input style='margin:1%; width: 20%;' type='range' min=0 max=1 step=0.01 value="+System.Double.format(Kingdom.App.audioVolume,"G")+" onchange='document.getElementsByTagName(\"audio\")[0].volume = this.value;' />",$t2)),p=($t2=document.createElement("p"),$t2.innerHTML="Visible Tiles: ",$t2),input=document.createElement("input"),input.setAttribute("style","margin: 1%; width: 20%;"),input.type="range",input.min="10",input.max=Kingdom.App.tiles.toString(),input.step="1",input.value=Kingdom.App.visibleTiles.toString(),input.onchange=function(){try{var value=System.Int32.parse(input.value);if(value<10||value>50||value>Kingdom.App.tiles)return;Kingdom.App.visibleTiles=value;Kingdom.App.width=Bridge.Int.div(Kingdom.App.canvas.width,Kingdom.App.visibleTiles)|0;Kingdom.App.height=Bridge.Int.div(Kingdom.App.canvas.height,Kingdom.App.visibleTiles)|0;Kingdom.App.offsetX=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).select($asm.$.Kingdom.App.f5).where($asm.$.Kingdom.App.f6).first().x|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0;Kingdom.App.offsetY=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).select($asm.$.Kingdom.App.f5).where($asm.$.Kingdom.App.f6).first().y|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0;Kingdom.App.Draw()}catch($e6){$e6=System.Exception.create($e6)}},p.appendChild(input),innerMenu.appendChild(p),menu.appendChild(innerMenu),document.body.appendChild(menu));!Kingdom.App.isOffsetAnimRunning&&Kingdom.App.pressedOffsetKeys.Count>0&&Kingdom.App.offsetAnimSpeed!==0&&Kingdom.App.offsetAnimFrame()},f11:function(ev){Kingdom.App.gameEnded||Kingdom.App.isMenuVisible||(Bridge.referenceEquals(ev.key,"Enter")&&document.getElementById("nextTurn").click(),Kingdom.App.offsetAnimSpeed===0?(Bridge.referenceEquals(ev.key,"d")&&(Kingdom.App.offsetX-=3,Kingdom.App.Draw()),Bridge.referenceEquals(ev.key,"a")&&(Kingdom.App.offsetX+=3,Kingdom.App.Draw()),Bridge.referenceEquals(ev.key,"w")&&(Kingdom.App.offsetY+=3,Kingdom.App.Draw()),Bridge.referenceEquals(ev.key,"s")&&(Kingdom.App.offsetY-=3,Kingdom.App.Draw())):(Bridge.referenceEquals(ev.key,"w")&&Kingdom.App.pressedOffsetKeys.contains(119)&&Kingdom.App.pressedOffsetKeys.remove(119),Bridge.referenceEquals(ev.key,"s")&&Kingdom.App.pressedOffsetKeys.contains(115)&&Kingdom.App.pressedOffsetKeys.remove(115),Bridge.referenceEquals(ev.key,"a")&&Kingdom.App.pressedOffsetKeys.contains(97)&&Kingdom.App.pressedOffsetKeys.remove(97),Bridge.referenceEquals(ev.key,"d")&&Kingdom.App.pressedOffsetKeys.contains(100)&&Kingdom.App.pressedOffsetKeys.remove(100)))},f12:function(){Kingdom.App.isMenuVisible||(Kingdom.App.ResearchSomething(),document.getElementById("research").blur())},f13:function(x){return x.end},f14:function(x){return x.currAI==null&&!x.end},f15:function(x){return Bridge.is(x,Kingdom.Unit)},f16:function(x){return Bridge.as(x,Kingdom.Unit)},f17:function(){if(!Kingdom.App.isAnimRunning&&!Kingdom.App.isOffsetAnimRunning&&!Kingdom.App.announceAnimIsRunning&&!Kingdom.App.isMenuVisible){Kingdom.Game.game.NextTurn(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState));var p=Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState);if(p.end&&document.getElementById("nextTurn").click(),System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f4).where(function(x){return Bridge.referenceEquals(Bridge.as(x,Kingdom.City).owner,p)}).count()===0&&(p.end=!0,document.getElementById("nextTurn").click()),System.Linq.Enumerable.from(Kingdom.Game.game.players).where($asm.$.Kingdom.App.f13).count()===(Kingdom.Game.game.players.Count-1|0)||System.Linq.Enumerable.from(Kingdom.Game.game.players).where($asm.$.Kingdom.App.f14).count()===0){Kingdom.App.Announce("<h1>Game Over<\/h1><p>The game has ended. Return to <a href='index.html'>Main Menu<\/a> and try another game!",!0);Kingdom.App.gameEnded=!0;Kingdom.App.isSaved=!0;Kingdom.Achievement.finishedGames=Kingdom.Achievement.finishedGames+1|0;Kingdom.Achievement.Check();window.localStorage.game_continue="";return}if(Kingdom.App.CloseRecruitBuildResearch(),document.getElementById("nextTurn").blur(),p.currAI==null){console.log("Player is marked as AI, skipping player name change & map centering");Kingdom.App.DisplayPlayerInfo();try{Kingdom.App.offsetX=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f15).select($asm.$.Kingdom.App.f16).where(function(x){return Bridge.referenceEquals(x.owner,p)}).first().x|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0;Kingdom.App.offsetY=(-System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.App.f15).select($asm.$.Kingdom.App.f16).where(function(x){return Bridge.referenceEquals(x.owner,p)}).first().y|0)+(Bridge.Int.div(Kingdom.App.visibleTiles,2)|0)|0}catch($e6){$e6=System.Exception.create($e6)}}if(Kingdom.App.Draw(),Kingdom.App.info_text.innerHTML="",Kingdom.App.info_head.innerHTML="",Kingdom.App.selectedUnit=null,Kingdom.App.infoCtx.clearRect(0,0,64,64),p.currAI!=null&&!1){p.currAI.Play();window.setTimeout(Bridge.fn.cacheBind(document.getElementById("nextTurn"),document.getElementById("nextTurn").click));return}Kingdom.App.announceTexts.clear();Kingdom.App.isSaved=!1}},f18:function(){var text=Kingdom.SaveManager.Save();window.localStorage.game_continue=text;Kingdom.App.isSaved=!0;document.getElementById("loadingScreen").setAttribute("style","display: none;")},f19:function(){Kingdom.App.isMenuVisible||(document.getElementById("save").blur(),document.getElementById("loadingScreen").setAttribute("style","display: block;"),document.getElementById("details").innerHTML="This will take a while. I have to save "+((System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).count()+Kingdom.Game.game.players.Count|0)+1|0)+" objects",window.setTimeout($asm.$.Kingdom.App.f18,500))},f20:function(x){return x.production},f21:function(a){return Bridge.is(a,Kingdom.City)},f22:function(a){return Bridge.as(a,Kingdom.City)},f23:function(a){return Bridge.referenceEquals(a.owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))&&a.buildings[System.Array.index(Kingdom.Building.eBuildings.AgrCentrum,a.buildings)].state===Kingdom.Building.states.Builded},f24:function(a){return a.buildings[System.Array.index(Kingdom.Building.eBuildings.AgrCentrum,a.buildings)].bonusOutputEachTurn},f25:function(){System.Linq.Enumerable.from(document.getElementsByClassName("recruitBox")).last().remove()}});Bridge.define("Kingdom.App.textures",{$kind:"enum",statics:{fields:{border:0,border_blue:1,border_green:2,border_red:3,border_yellow:4,city_blue:5,city_green:6,city_neutral:7,city_red:8,city_yellow:9,cloud:10,city_recruitTent_blue:11,city_recruitTent_green:12,city_recruitTent_red:13,city_recruitTent_yellow:14,resource_bush:15,resource_deer:16,resource_farm:17,resource_farm_done:18,resource_fish:19,terrain_land:20,terrain_mountain:21,terrain_sea:22,unavalibeTile:23,unit_archer:24,unit_basic_blue:25,unit_catapult:26,unit_explorer:27,unit_basic_green:28,unit_heavyInfantry:29,unit_musketeer:30,unit_basic_red:31,unit_warrior:32,unit_basic_yellow:33,unit_berserk:34}}});Bridge.define("Kingdom.Ball",{statics:{fields:{width:0,height:0,gravity:0,maxVx:0,maxVy:0},ctors:{init:function(){this.width=10;this.height=10;this.gravity=0;this.maxVx=12;this.maxVy=15}}},fields:{vx:0,vy:0,x:0,y:0,k:0},ctors:{init:function(){this.k=1}},methods:{Move:function(){if(this.vx>Kingdom.Ball.maxVx&&(this.vx=Kingdom.Ball.maxVx,Kingdom.Pong.pong.pWidth>80&&(Kingdom.Pong.pong.pWidth=Kingdom.Pong.pong.pWidth-2|0)),this.vx<-12&&(this.vx=-12,Kingdom.Pong.pong.pWidth>80&&(Kingdom.Pong.pong.pWidth=Kingdom.Pong.pong.pWidth-2|0)),this.vy>Kingdom.Ball.maxVy&&(this.vy=Kingdom.Ball.maxVy,Kingdom.Pong.pong.pWidth>80&&(Kingdom.Pong.pong.pWidth=Kingdom.Pong.pong.pWidth-2|0)),this.vy<-15&&(this.vy=-15,Kingdom.Pong.pong.pWidth>80&&(Kingdom.Pong.pong.pWidth=Kingdom.Pong.pong.pWidth-2|0)),this.x+=this.vx,this.y+=this.vy,this.vy+=Kingdom.Ball.gravity,this.y+Kingdom.Ball.height>Kingdom.Pong.pong.canvas.offsetHeight){Kingdom.Pong.pong.Reset();return}this.x<0&&(this.x=0,this.vx=-this.vx,this.k=this.k+1|0);this.x+Kingdom.Ball.width>Kingdom.Pong.pong.canvas.offsetWidth&&(this.x=Kingdom.Pong.pong.canvas.offsetWidth-Kingdom.Ball.width|0,this.vx=-this.vx,this.k=this.k+1|0);this.y<0&&(this.y=0,this.vy=-this.vy,this.k=this.k+1|0);this.k>0&&this.y>=((Bridge.Int.div(Kingdom.Pong.pong.canvas.offsetWidth,100)|0)*95|0)&&this.y<=((Bridge.Int.div(Kingdom.Pong.pong.canvas.offsetWidth,100)|0)*99|0)&&this.x>=Kingdom.Pong.pong.pX&&this.x<=(Kingdom.Pong.pong.pX+Kingdom.Pong.pong.pWidth|0)&&(this.k=0,this.y=(Bridge.Int.div(Kingdom.Pong.pong.canvas.offsetWidth,100)|0)*93|0,this.vy=-this.vy-(this.vy*this.vy<10?.2:.7),this.vx>0&&this.x>=Kingdom.Pong.pong.pX+Kingdom.Pong.pong.pWidth/2||this.vx<=0&&this.x<=Kingdom.Pong.pong.pX+Kingdom.Pong.pong.pWidth/2?(this.vx=this.vx+this.vx*.3,Kingdom.Pong.pong.score=Kingdom.Pong.pong.score.add(System.UInt64(40))):(this.vx=-this.vx-this.vx*.15,Kingdom.Pong.pong.score=Kingdom.Pong.pong.score.add(System.UInt64(20))));Kingdom.Pong.pong.Draw();window.requestAnimationFrame(Bridge.fn.cacheBind(this,this.Move))}}});Bridge.define("Kingdom.Building",{statics:{fields:{buildings:null},ctors:{init:function(){this.buildings=System.Array.init([new Kingdom.Building("Church","In the middleage, churches were centers of education. This building increases science level, unlocking powerful researches.",System.Array.init(0,0,System.Int32),4,3,3,.5,0,0,0),new Kingdom.Building("Barracks","This building allows you to train better soldiers, increasing their HP by 5",System.Array.init(0,0,System.Int32),5,3,3,0,0,0,0),new Kingdom.Building("Granary","Granary increases prosperity of city by number of all resources near city.",System.Array.init([Kingdom.Research.researches.Storages],System.Int32),11,5,5,0,0,0,0),new Kingdom.Building("School","School is the second scientific building, that is avalibe to build. Increases your science level by 0.8",System.Array.init([Kingdom.Research.researches.GeneralResearch_I],System.Int32),9,4,4,.8,0,0,0),new Kingdom.Building("Walls","As your civilization grows, new threats appears. Build walls to support defending units in this city.",System.Array.init([Kingdom.Research.researches.GeneralResearch_I,Kingdom.Research.researches.Architecture],System.Int32),5,4,4,0,0,0,0),new Kingdom.Building("Marketplace","Marketplace can be built only in the biggest cities in your empire, making their prosperity and output even bigger!",System.Array.init([Kingdom.Research.researches.GeneralResearch_I,Kingdom.Research.researches.Architecture],System.Int32),15,5,5,0,2,0,1),new Kingdom.Building("University","The best science building, gives your city prosperity points and increases your science level greatly. If you have more than 1 university, you gain additional 0.1 science level per university per turn",System.Array.init([Kingdom.Research.researches.GeneralResearch_II,Kingdom.Research.researches.Architecture],System.Int32),18,5,5,1,4,0,0),new Kingdom.Building("Agriculture Centrum","When your city grows, you need to feed your people. Agriculture center lowers your city resources output, but increases your prosperity over turn.",System.Array.init([Kingdom.Research.researches.GeneralResearch_II,Kingdom.Research.researches.Architecture,Kingdom.Research.researches.AgricultureResearch],System.Int32),24,7,7,0,0,1,-2)],Kingdom.Building)}},methods:{Get$1:function(pattern){return new Kingdom.Building(pattern.name,pattern.description,pattern.researchReq,pattern.cost,pattern.turnsRemaining,pattern.maxTurnsRemaining,pattern.researchMultiplier,pattern.bonusProsperityFirstTurn,pattern.bonusProsperityEachTurn,pattern.bonusOutputEachTurn)},Get:function(){for(var l=new(System.Collections.Generic.List$1(Kingdom.Building)),i=0;i<Kingdom.Building.buildings.length;i=i+1|0)l.add(Kingdom.Building.Get$1(Kingdom.Building.buildings[System.Array.index(i,Kingdom.Building.buildings)]));return l.toArray()}}},fields:{researchReq:null,researchMultiplier:0,cost:0,turnsRemaining:0,maxTurnsRemaining:0,name:null,description:null,bonusProsperityEachTurn:0,bonusProsperityFirstTurn:0,bonusOutputEachTurn:0,state:0},ctors:{init:function(){this.state=Kingdom.Building.states.NotBuild},ctor:function(name,description,researchReq,cost,turnsRemaining,maxTurnsRemaining,researchMultiplier,bonusProsperityFirstTurn,bonusProsperityEachTurn,bonusOutputEachTurn){this.$initialize();this.researchReq=researchReq;this.researchMultiplier=researchMultiplier;this.cost=cost;this.turnsRemaining=turnsRemaining;this.maxTurnsRemaining=maxTurnsRemaining;this.name=name;this.description=description;this.bonusProsperityEachTurn=bonusProsperityEachTurn;this.bonusProsperityFirstTurn=bonusProsperityFirstTurn;this.bonusOutputEachTurn=bonusOutputEachTurn}},methods:{StartBuilding:function(c){var $t,p=c.owner,everythingResearched=System.Linq.Enumerable.from(this.researchReq).count()===0,i;if(!everythingResearched){$t=Bridge.getEnumerator(this.researchReq);try{while($t.moveNext())if(i=$t.Current,p.researches[System.Array.index(i,p.researches)].state===Kingdom.Research.States.Researched)everythingResearched=!0;else{everythingResearched=!1;break}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}}return this.state===Kingdom.Building.states.NotBuild&&p.resources>=this.cost&&c.currentlyBuilding==null&&everythingResearched?(p.resources=p.resources-this.cost|0,this.state=Kingdom.Building.states.InProgress,c.currentlyBuilding=this,Kingdom.App.Announce(System.String.format("{0} is now building in one of your cities, it'll be done in {1} turns",this.name,Bridge.box(this.turnsRemaining,System.Int32))),!0):(this.state===Kingdom.Building.states.Builded?Kingdom.App.Announce("This building is already built"):this.state===Kingdom.Building.states.InProgress?Kingdom.App.Announce("You are already building this building"):c.currentlyBuilding!=null?Kingdom.App.Announce("You are already building something"):everythingResearched?p.resources<this.cost?Kingdom.App.Announce("You don't have enough resources"):Kingdom.App.Announce("You cannot build this building"):Kingdom.App.Announce(System.String.concat("There are some researches, you have to do before building ",this.name)),!1)},OnPlayerTurnBegin:function(c){var p=c.owner,res;this.state===Kingdom.Building.states.InProgress?(this.turnsRemaining=this.turnsRemaining-1|0,this.turnsRemaining===0&&(Kingdom.App.Announce(System.String.format("{0} has been built!",this.name)),c.currentlyBuilding=null,this.state=Kingdom.Building.states.Builded,c.currpop=c.currpop+this.bonusProsperityFirstTurn|0,Bridge.referenceEquals(this.name,"Granary")&&(res=System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.Building.f1).select($asm.$.Kingdom.Building.f2).where(function(x){return Bridge.referenceEquals(x.cityOwner,c)}).count(),c.currpop=c.currpop+res|0,Kingdom.App.Announce("Granary added "+res+" prosperity to one of your cities")))):this.state===Kingdom.Building.states.Builded&&(p.resources=p.resources+this.bonusOutputEachTurn|0,c.currpop=c.currpop+this.bonusProsperityEachTurn|0)}}});Bridge.ns("Kingdom.Building",$asm.$);Bridge.apply($asm.$.Kingdom.Building,{f1:function(x){return Bridge.is(x,Kingdom.Resource)},f2:function(x){return Bridge.as(x,Kingdom.Resource)}});Bridge.define("Kingdom.Building.eBuildings",{$kind:"enum",statics:{fields:{Church:0,Barracks:1,Granary:2,School:3,Walls:4,Marketplace:5,University:6,AgrCentrum:7}}});Bridge.define("Kingdom.Building.states",{$kind:"enum",statics:{fields:{NotBuild:0,InProgress:1,Builded:2}}});Bridge.define("Kingdom.MapObject",{statics:{fields:{separator:0},ctors:{init:function(){this.separator=1e4}}},fields:{texture:0,x:0,y:0,z:0}});Bridge.define("Kingdom.Game",{statics:{fields:{separator:0,game:null},ctors:{init:function(){this.separator=1e4}},methods:{getPlayerId:function(p){return Kingdom.Game.game.players.indexOf(p)}}},fields:{length:0,players:null,_playerState:0,Map:null,rnd:null},props:{playerState:{get:function(){return this._playerState},set:function(value){this._playerState=value<0?0:value>=this.players.Count?0:value}}},ctors:{init:function(){this.players=new(System.Collections.Generic.List$1(Kingdom.Player))},ctor:function(length,save,numberOfPlayers,playAI,genMapIfNewGame){var $t,i,p,i1,p1;if(length===void 0&&(length=64),save===void 0&&(save=""),numberOfPlayers===void 0&&(numberOfPlayers=2),playAI===void 0&&(playAI=!1),genMapIfNewGame===void 0&&(genMapIfNewGame=!0),this.$initialize(),Bridge.referenceEquals(save,"")){for(this.length=length,this.rnd=new System.Random.ctor,Kingdom.Game.game=this,i=0;i<numberOfPlayers;i++|0)p=($t=new Kingdom.Player,$t.color=i,$t.name="Player "+(i+1|0),$t),p.currAI=i!==0&&playAI?new Kingdom.AIsoptik(p):null,this.players.add(p);genMapIfNewGame&&(this.Map=this.GenerateMap(length))}else try{Kingdom.Game.game=this;Kingdom.SaveManager.Load(save)}catch(ex){for(ex=System.Exception.create(ex),Kingdom.App.isAnnounceEnabled=!0,console.log(ex),Kingdom.App.Announce("Unable to load game, save is corrupted. Generating new game..."),window.localStorage.game_continue="",this.length=length,this.rnd=new System.Random.ctor,Kingdom.Game.game=this,i1=0;i1<numberOfPlayers;i1++|0)p1=($t=new Kingdom.Player,$t.color=i1,$t.name="Player "+(i1+1|0),$t),p1.currAI=i1!==0&&playAI?new Kingdom.AIsoptik(p1):null,this.players.add(p1);this.Map=this.GenerateMap(length)}}},methods:{GenerateMap:function(length){var s=new System.Diagnostics.Stopwatch,map,gen,heightMap,max,mountainMin,i,j,a,i1,j1,a1,i2,j2,a2,i3,j3,a3,i4,j4,count,o,p,numberOfNeutralCities,i5,coords,l,f,g,c,i6,city,resources,cx,cy,k,tr;for(Kingdom.App.debug&&s.start(),map=System.Array.create(null,null,Kingdom.MapObject,length,length,3),gen=new Kingdom.Generator(length,length),gen.Generate(),heightMap=gen.map,Kingdom.Game.game.Map=map,max=System.Linq.Enumerable.from(heightMap).ofType(System.Int32).max(),mountainMin=Bridge.Int.clip32(max*.95),i=0;i<length;i++|0)for(j=0;j<length;j++|0)heightMap.get([i,j])<=0?map.set([i,j,0],new Kingdom.Terrain.$ctor1(Kingdom.Terrain.Types.Sea,Kingdom.App.textures.terrain_sea,i,j,0,Kingdom.App.useFog,this.players.Count)):heightMap.get([i,j])>=mountainMin&&heightMap.get([i,j])>=4?map.set([i,j,0],new Kingdom.Terrain.$ctor1(Kingdom.Terrain.Types.Mountain,Kingdom.App.textures.terrain_mountain,i,j,0,Kingdom.App.useFog,this.players.Count)):map.set([i,j,0],new Kingdom.Terrain.$ctor1(Kingdom.Terrain.Types.Land,Kingdom.App.textures.terrain_land,i,j,0,Kingdom.App.useFog,this.players.Count));for(var cities=new(System.Collections.Generic.List$1(Kingdom.Point)),x=0,y=0;;){if(x++|0,y++|0,x>=length||y>=length)return this.GenerateMap(length);for(a=!0,i1=x-1|0;i1<=(x+1|0);i1++|0){if(!a)break;if(!(i1<0)&&!(i1>=length))for(j1=y-1|0;j1<=(y+1|0);j1++|0)if(!(j1<0)&&!(j1>=length)&&Bridge.as(map.get([i1,j1,0]),Kingdom.Terrain).type!==Kingdom.Terrain.Types.Land){a=!1;break}}if(a){cities.add(new Kingdom.Point.$ctor1(x,y));map.set([x,y,1],new Kingdom.City.$ctor1(this.players.getItem(0),Kingdom.App.textures.city_blue,"Blue Home City",x,y,1));map.set([x,y,2],Kingdom.Unit.getUnit(this.players.getItem(0),Kingdom.App.textures.unit_basic_blue,Kingdom.Unit.units[System.Array.index(Kingdom.Unit.eUnits.Warrior,Kingdom.Unit.units)],x,y));Bridge.as(map.get([x,y,2]),Kingdom.Unit).turns=Bridge.as(map.get([x,y,2]),Kingdom.Unit).maxturns;this.players.getItem(0).revealTilesNear(x,y,4);break}}for(x=length-1|0,y=length-1|0;;){if(x--|0,y--|0,x>=length||y>=length)return this.GenerateMap(length);for(a1=!0,i2=x-1|0;i2<=(x+1|0);i2++|0){if(!a1)break;if(!(i2<0)&&!(i2>=length))for(j2=y-1|0;j2<=(y+1|0);j2++|0)if(!(j2<0)&&!(j2>=length)&&Bridge.as(map.get([i2,j2,0]),Kingdom.Terrain).type!==Kingdom.Terrain.Types.Land){a1=!1;break}}if(a1){cities.add(new Kingdom.Point.$ctor1(x,y));map.set([x,y,1],new Kingdom.City.$ctor1(this.players.getItem(1),Kingdom.App.textures.city_red,"Red Home City",x,y,1));map.set([x,y,2],Kingdom.Unit.getUnit(this.players.getItem(1),Kingdom.App.textures.unit_basic_red,Kingdom.Unit.units[System.Array.index(Kingdom.Unit.eUnits.Warrior,Kingdom.Unit.units)],x,y));Bridge.as(map.get([x,y,2]),Kingdom.Unit).turns=Bridge.as(map.get([x,y,2]),Kingdom.Unit).maxturns;this.players.getItem(1).revealTilesNear(x,y,4);break}}if(this.players.Count>2){for(x=0,y=length-1|0;;){if(x++|0,y--|0,x>=length||y>=length)return this.GenerateMap(length);for(a2=!0,i3=x-1|0;i3<=(x+1|0);i3++|0){if(!a2)break;if(!(i3<0)&&!(i3>=length))for(j3=y-1|0;j3<=(y+1|0);j3++|0)if(!(j3<0)&&!(j3>=length)&&Bridge.as(map.get([i3,j3,0]),Kingdom.Terrain).type!==Kingdom.Terrain.Types.Land){a2=!1;break}}if(a2){cities.add(new Kingdom.Point.$ctor1(x,y));map.set([x,y,1],new Kingdom.City.$ctor1(this.players.getItem(2),Kingdom.App.textures.city_green,"Green Home City",x,y,1));map.set([x,y,2],Kingdom.Unit.getUnit(this.players.getItem(2),Kingdom.App.textures.unit_basic_green,Kingdom.Unit.units[System.Array.index(Kingdom.Unit.eUnits.Warrior,Kingdom.Unit.units)],x,y));Bridge.as(map.get([x,y,2]),Kingdom.Unit).turns=Bridge.as(map.get([x,y,2]),Kingdom.Unit).maxturns;this.players.getItem(2).revealTilesNear(x,y,4);break}}if(this.players.Count>3)for(x=length-1|0,y=0;;){if(x--|0,y++|0,x>=length||y>=length)return this.GenerateMap(length);for(a3=!0,i4=x-1|0;i4<=(x+1|0);i4++|0){if(!a3)break;if(!(i4<0)&&!(i4>=length))for(j4=y-1|0;j4<=(y+1|0);j4++|0)if(!(j4<0)&&!(j4>=length)&&Bridge.as(map.get([i4,j4,0]),Kingdom.Terrain).type!==Kingdom.Terrain.Types.Land){a3=!1;break}}if(a3){cities.add(new Kingdom.Point.$ctor1(x,y));map.set([x,y,1],new Kingdom.City.$ctor1(this.players.getItem(3),Kingdom.App.textures.city_yellow,"Yellow Home City",x,y,1));map.set([x,y,2],Kingdom.Unit.getUnit(this.players.getItem(3),Kingdom.App.textures.unit_basic_yellow,Kingdom.Unit.units[System.Array.index(Kingdom.Unit.eUnits.Warrior,Kingdom.Unit.units)],x,y));Bridge.as(map.get([x,y,2]),Kingdom.Unit).turns=Bridge.as(map.get([x,y,2]),Kingdom.Unit).maxturns;this.players.getItem(3).revealTilesNear(x,y,4);break}}}for(count=cities.Count,o=0;o<count;o++|0)for(p=cities.getItem(o).$clone(),numberOfNeutralCities=(Bridge.Int.div(length,2)|0)-4|0,i5=0;i5<numberOfNeutralCities;i5+=4){for(coords=new(System.Collections.Generic.List$1(Kingdom.Point)),l=4+i5|0,f=p.x-l|0;f<=(p.x+l|0);f++|0)if(!(f<0)&&!(f>=length))for(g=p.y-l|0;g<=(p.y+l|0);g++|0)g<0||g>=length||(f===(p.x+l|0)||g===(p.y+l|0)||f===(p.x-l|0)||g===(p.y-l|0))&&Bridge.as(map.get([f,g,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Land&&map.get([f,g,1])==null&&coords.add(new Kingdom.Point.$ctor1(f,g));coords.Count>=1&&(c=coords.getItem(this.rnd.next$1(coords.Count)).$clone(),map.set([c.x,c.y,1],new Kingdom.City.$ctor1(null,Kingdom.App.textures.city_neutral,"Neutral City",c.x,c.y,1)),cities.add(c.$clone()))}for(count=cities.Count,i6=0;i6<count;i6++|0){for(city=cities.getItem(i6).$clone(),resources=new(System.Collections.Generic.List$1(Kingdom.Point)),cx=city.x-2|0;cx<=(city.x+2|0);cx++|0)if(!(cx<0)&&!(cx>=length))for(cy=city.y-2|0;cy<=(city.y+2|0);cy++|0)cy<0||cy>=length||cy===city.y&&cx===city.x||map.get([cx,cy,1])==null&&resources.add(new Kingdom.Point.$ctor1(cx,cy));for(k=5,tr=0;k>0;){if(tr>=10)break;if(resources.Count<1)break;var q=this.rnd.next$1(resources.Count),typeOfResource=-1,r=null,t=Bridge.as(map.get([resources.getItem(q).x,resources.getItem(q).y,0]),Kingdom.Terrain);t.type===Kingdom.Terrain.Types.Land?typeOfResource=this.rnd.next$1(3):t.type===Kingdom.Terrain.Types.Mountain?typeOfResource=1:t.type===Kingdom.Terrain.Types.Sea&&(typeOfResource=3);switch(typeOfResource){case 0:r=Kingdom.Resource.getResource(Bridge.as(map.get([city.x,city.y,1]),Kingdom.City),Kingdom.Resource.resources[System.Array.index(Kingdom.Resource.eResources.FishDeerBush,Kingdom.Resource.resources)],Kingdom.App.textures.resource_bush,Kingdom.App.textures.unavalibeTile,resources.getItem(q).x,resources.getItem(q).y);break;case 1:r=Kingdom.Resource.getResource(Bridge.as(map.get([city.x,city.y,1]),Kingdom.City),Kingdom.Resource.resources[System.Array.index(Kingdom.Resource.eResources.FishDeerBush,Kingdom.Resource.resources)],Kingdom.App.textures.resource_deer,Kingdom.App.textures.unavalibeTile,resources.getItem(q).x,resources.getItem(q).y);break;case 2:r=Kingdom.Resource.getResource(Bridge.as(map.get([city.x,city.y,1]),Kingdom.City),Kingdom.Resource.resources[System.Array.index(Kingdom.Resource.eResources.Farm,Kingdom.Resource.resources)],Kingdom.App.textures.resource_farm,Kingdom.App.textures.resource_farm_done,resources.getItem(q).x,resources.getItem(q).y);break;case 3:r=Kingdom.Resource.getResource(Bridge.as(map.get([city.x,city.y,1]),Kingdom.City),Kingdom.Resource.resources[System.Array.index(Kingdom.Resource.eResources.FishDeerBush,Kingdom.Resource.resources)],Kingdom.App.textures.resource_fish,Kingdom.App.textures.unavalibeTile,resources.getItem(q).x,resources.getItem(q).y)}map.set([resources.getItem(q).x,resources.getItem(q).y,1],r);r!=null&&(k-=r.firstTurn_productionBoost|0,tr++|0)}}return Kingdom.App.debug&&(s.stop(),console.log("Map generated in "+s.milliseconds()+" ms")),map},NextTurn:function(player){var query,universities,playerWhosTurnIsStarting;Kingdom.App.debug&&console.log(System.String.format("Processing NextTurn for player {0}",Bridge.box(player.color,System.Int32)));query=System.Linq.Enumerable.from(this.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.Game.f1).select($asm.$.Kingdom.Game.f2);query.where(function(x){return Bridge.referenceEquals(x.owner,player)||x.owner==null||Bridge.is(x,Kingdom.City)}).forEach($asm.$.Kingdom.Game.f3);universities=0;System.Linq.Enumerable.from(this.Map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.Game.f4).select($asm.$.Kingdom.Game.f5).where(function(x){return Bridge.referenceEquals(x.owner,player)}).forEach(function(x){universities+=(x.buildings[System.Array.index(Kingdom.Building.eBuildings.University,x.buildings)].state===Kingdom.Building.states.Builded?1:0)|0});universities>=2&&(player.researchMultiplier+=universities*.1);this.playerState++|0;playerWhosTurnIsStarting=this.players.getItem(this.playerState);playerWhosTurnIsStarting.researchMultiplier=0;playerWhosTurnIsStarting.researches.forEach(Bridge.fn.bind(this,$asm.$.Kingdom.Game.f6));query.where(function(x){return Bridge.referenceEquals(x.owner,playerWhosTurnIsStarting)&&Bridge.is(x,Kingdom.City)}).select($asm.$.Kingdom.Game.f5).forEach($asm.$.Kingdom.Game.f7);query.where(function(x){return Bridge.referenceEquals(x.owner,playerWhosTurnIsStarting)&&Bridge.is(x,Kingdom.City)}).select($asm.$.Kingdom.Game.f5).forEach(function(x){System.Linq.Enumerable.from(x.buildings).where($asm.$.Kingdom.Game.f8).forEach(function(a){playerWhosTurnIsStarting.researchMultiplier+=a.researchMultiplier})})},getString:function(){return System.String.format("{0}{1}{2}{3}{4}",Bridge.box(this.length,System.Int32),Bridge.box(Kingdom.Game.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this._playerState,System.Int32),Bridge.box(Kingdom.Game.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(Kingdom.App.useFog,System.Boolean,$box_.System.Boolean.toString))},fromString:function(data){var s=System.String.split(data,[Kingdom.Game.separator].map(function(i){return String.fromCharCode(i)}));this.length=System.Int32.parse(s[System.Array.index(0,s)]);this._playerState=System.Int32.parse(s[System.Array.index(1,s)]);Kingdom.App.tiles=this.length;this.rnd=new System.Random.ctor;this.Map=System.Array.create(null,null,Kingdom.MapObject,this.length,this.length,3);Kingdom.App.useFog=Bridge.referenceEquals(s[System.Array.index(2,s)],"True")}}});Bridge.ns("Kingdom.Game",$asm.$);Bridge.apply($asm.$.Kingdom.Game,{f1:function(x){return Bridge.is(x,Kingdom.OwnerObject)},f2:function(x){return Bridge.as(x,Kingdom.OwnerObject)},f3:function(x){x.NextTurn()},f4:function(x){return Bridge.is(x,Kingdom.City)},f5:function(x){return Bridge.as(x,Kingdom.City)},f6:function(x){x.OnPlayerTurnBegin(this.players.getItem(this.playerState))},f7:function(x){x.buildings.forEach(function(a){a.OnPlayerTurnBegin(x)})},f8:function(a){return a.state===Kingdom.Building.states.Builded}});Bridge.define("Kingdom.Generator",{fields:{width:0,height:0,rnd:null,allRiverTiles:null},props:{map:null},ctors:{ctor:function(width,height){this.$initialize();this.width=width;this.height=height;this.map=System.Array.create(0,null,System.Int32,width,height);this.rnd=new System.Random.ctor;this.allRiverTiles=new(System.Collections.Generic.List$1(System.Array.type(System.Int32)))}},methods:{Generate:function(){this.GenSeasNearEdges(2);this.Smooth(7);this.GenRivers(60,80,3);this.SmoothRivers();this.SmoothRiverDiagonals();this.Smooth(3)},Smooth:function(n){var k,i,j,number;for(n===void 0&&(n=1),k=0;k<n;k=k+1|0)for(i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)number=this.map.get([i,j]),this.getNeighWith(i,j,number)<=3&&(this.getNeighWith(i,j,number-1|0)>this.getNeighWith(i,j,number+1|0)?this.map.set([i,j],number-1|0):this.map.set([i,j],number+1|0))},getNeighWith:function(x,y,target){for(var j,neighb=0,i=x-1|0;i<=(x+1|0);i=i+1|0)if(!(i<0)&&!(i>=this.width))for(j=y-1|0;j<=(y+1|0);j=j+1|0)j<0||j>=this.height||this.map.get([i,j])===target&&(neighb=neighb+1|0);return neighb},getRiverNeigh:function(x,y){for(var j,neighb=0,i=x-1|0;i<=(x+1|0);i=i+1|0)if(!(i<0)&&!(i>=this.width))for(j={v:y-1|0};j.v<=(y+1|0);j.v=j.v+1|0)j.v<0||j.v>=this.height||this.map.get([i,j.v])===0&&System.Linq.Enumerable.from(this.allRiverTiles).where(function($me,j){return function(a){return a[System.Array.index(0,a)]===i&&a[System.Array.index(1,a)]===j.v}}(this,j)).count()>0&&(neighb=neighb+1|0);return neighb},GenSeasNearEdges:function(pow){var i,j;for(pow===void 0&&(pow=2),i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0){for(var tilesFromEdge=Math.min(Math.min(i,this.width-i|0),Math.min(j,this.height-j|0)),chanceToBeOne=Bridge.Int.clip32(Math.pow(tilesFromEdge,pow)),mult=0;chanceToBeOne>=100;)mult=mult+1|0,chanceToBeOne=chanceToBeOne-100|0;mult===0&&chanceToBeOne>20&&(chanceToBeOne=chanceToBeOne+20|0);this.map.set([i,j],this.rnd.next$1(101)<=chanceToBeOne?1+mult|0:mult)}},GenRivers:function(startPointPercentFrom,startPointPercentTo,n){var k,i,j,lastHeight,lowestNeighb,chosen,i1,j1;for(n===void 0&&(n=1),k=0;k<n;k=k+1|0){var q=System.Linq.Enumerable.from(this.map).ofType(System.Int32),max=q.max(),minPoint=Bridge.Int.clip32(startPointPercentFrom/100*max),maxPoint=Bridge.Int.clip32(startPointPercentTo/100*max),startPoint=this.rnd.next$2(minPoint,maxPoint+1|0),possibleStartPoints=new(System.Collections.Generic.List$1(System.Array.type(System.Int32))),rndStartPointCoord=System.Array.init(2,0,System.Int32);for(i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)this.map.get([i,j])===startPoint&&possibleStartPoints.add(System.Array.init([i,j],System.Int32));if(possibleStartPoints.Count===0){this.GenRivers(startPointPercentFrom,startPointPercentTo,n-k|0);return}if(rndStartPointCoord=possibleStartPoints.getItem(this.rnd.next$1(possibleStartPoints.Count)),this.map.get([rndStartPointCoord[System.Array.index(0,rndStartPointCoord)],rndStartPointCoord[System.Array.index(1,rndStartPointCoord)]])===0){this.GenRivers(startPointPercentFrom,startPointPercentTo,n-k|0);return}lastHeight=this.map.get([rndStartPointCoord[System.Array.index(0,rndStartPointCoord)],rndStartPointCoord[System.Array.index(1,rndStartPointCoord)]]);this.map.set([rndStartPointCoord[System.Array.index(0,rndStartPointCoord)],rndStartPointCoord[System.Array.index(1,rndStartPointCoord)]],0);var power=1,lastCoords=System.Array.init([rndStartPointCoord[System.Array.index(0,rndStartPointCoord)],rndStartPointCoord[System.Array.index(1,rndStartPointCoord)]],System.Int32),riverCoords=new(System.Collections.Generic.List$1(System.Array.type(System.Int32)));for(riverCoords.add(lastCoords);power>0;){for(lowestNeighb=new(System.Collections.Generic.List$1(System.Array.type(System.Int32))),chosen=!1,i1={v:lastCoords[System.Array.index(0,lastCoords)]-1|0};i1.v<=(lastCoords[System.Array.index(0,lastCoords)]+1|0);i1.v=i1.v+1|0)if(!(i1.v<0)&&!(i1.v>=this.width)){if(chosen)break;for(j1={v:lastCoords[System.Array.index(1,lastCoords)]-1|0};j1.v<=(lastCoords[System.Array.index(1,lastCoords)]+1|0);j1.v=j1.v+1|0)if(!(i1.v<0)&&!(i1.v>=this.height)&&!(System.Linq.Enumerable.from(riverCoords).where(function($me,i1,j1){return function(x){return x[System.Array.index(0,x)]===i1.v&&x[System.Array.index(1,x)]===j1.v}}(this,i1,j1)).count()>0))if(this.map.get([i1.v,j1.v])===0){lowestNeighb.clear();lowestNeighb.add(System.Array.init([i1.v,j1.v],System.Int32));riverCoords.add(lowestNeighb.getItem(0));this.allRiverTiles.add(lowestNeighb.getItem(0));chosen=!0;break}else this.map.get([i1.v,j1.v])<=lastHeight&&(lowestNeighb.add(System.Array.init([i1.v,j1.v],System.Int32)),riverCoords.add(System.Linq.Enumerable.from(lowestNeighb).last()),this.allRiverTiles.add(System.Linq.Enumerable.from(lowestNeighb).last()))}if(lowestNeighb.Count===0)lastHeight=lastHeight+1|0,power=power-1|0;else{var minHeight={v:System.Linq.Enumerable.from(lowestNeighb).select(Bridge.fn.bind(this,$asm.$.Kingdom.Generator.f1)).min()},coords=System.Linq.Enumerable.from(lowestNeighb).where(function($me,minHeight){return Bridge.fn.bind($me,function(x){return this.map.get([x[System.Array.index(0,x)],x[System.Array.index(1,x)]])===minHeight.v})}(this,minHeight)).toArray(System.Array.type(System.Int32)),coord=coords[System.Array.index(this.rnd.next$1(coords.length),coords)];if(lastHeight=minHeight.v,this.map.set([coord[System.Array.index(0,coord)],coord[System.Array.index(1,coord)]],0),power=power+1|0,lastCoords=System.Array.init([coord[System.Array.index(0,coord)],coord[System.Array.index(1,coord)]],System.Int32),minHeight.v===0)break}}}},SmoothRivers:function(n){var k,i,j;for(n===void 0&&(n=1),k=0;k<n;k=k+1|0)for(i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)this.getRiverNeigh(i,j)>=4&&this.map.set([i,j],0)},SmoothRiverDiagonals:function(){var $t=Bridge.getEnumerator(this.allRiverTiles);try{while($t.moveNext()){var tile=$t.Current,x=tile[System.Array.index(0,tile)],y=tile[System.Array.index(1,tile)];(x+1|0)<this.width&&(y+1|0)<this.height&&this.map.get([x+1|0,y+1|0])===0&&this.map.get([x+1|0,y])!==0&&this.map.get([x,y+1|0])!==0&&(this.rnd.next$1(2)===1?this.map.set([x+1|0,y],0):this.map.set([x,y+1|0],0));(x-1|0)>=0&&(y-1|0)>=0&&this.map.get([x-1|0,y-1|0])===0&&this.map.get([x-1|0,y])!==0&&this.map.get([x,y-1|0])!==0&&(this.rnd.next$1(2)===1?this.map.set([x-1|0,y],0):this.map.set([x,y-1|0],0));(x+1|0)<this.width&&(y-1|0)>=0&&this.map.get([x+1|0,y-1|0])===0&&this.map.get([x+1|0,y])!==0&&this.map.get([x,y-1|0])!==0&&(this.rnd.next$1(2)===1?this.map.set([x+1|0,y],0):this.map.set([x,y+1|0],0));(x-1|0)>=0&&(y+1|0)<this.height&&this.map.get([x-1|0,y+1|0])===0&&this.map.get([x-1|0,y])!==0&&this.map.get([x,y+1|0])!==0&&(this.rnd.next$1(2)===1?this.map.set([x-1|0,y],0):this.map.set([x,y+1|0],0))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}}}});Bridge.ns("Kingdom.Generator",$asm.$);Bridge.apply($asm.$.Kingdom.Generator,{f1:function(x){return this.map.get([x[System.Array.index(0,x)],x[System.Array.index(1,x)]])}});Bridge.define("Kingdom.HeightMapGen",{statics:{fields:{enableNeighb:0,disableNeighb:0},ctors:{init:function(){this.enableNeighb=4;this.disableNeighb=4}}},fields:{width:0,height:0,map:null,rnd:null},ctors:{ctor:function(width,height,seed){seed===void 0&&(seed="");this.$initialize();this.width=height;this.height=width;this.map=System.Array.create(0,null,System.Int32,this.width,this.height);this.rnd=Bridge.referenceEquals(seed,"")?new System.Random.ctor:new System.Random.$ctor1(Bridge.getHashCode(seed));this.Generate()}},methods:{Generate:function(){this.RandomNoise();this.Smooth(5);this.GenerateHeightmap();this.GenerateDepths()},RandomNoise:function(){for(var j,i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)this.map.set([i,j],this.rnd.next$1(100)<46?0:1)},Smooth:function(n){var a,i,j;for(n===void 0&&(n=1),a=0;a<n;a=a+1|0)for(i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)this.map.get([i,j])===0?this.GetNeighbours(i,j)>Kingdom.HeightMapGen.enableNeighb&&this.map.set([i,j],1):this.GetNeighbours(i,j)<Kingdom.HeightMapGen.disableNeighb&&this.map.set([i,j],0)},GetNeighbours:function(x,y,target){var c,i,j;for(target===void 0&&(target=1),c=0,i=-1;i<=1;i=i+1|0)for(j=-1;j<=1;j=j+1|0)(i!==0||j!==0)&&((x+i|0)<0||(y+j|0)<0||(x+i|0)>=this.width||(y+j|0)>=this.height||this.map.get([x+i|0,y+j|0])===target&&(c=c+1|0));return c},GenerateHeightmap:function(){for(var j,iter,i1,j1,i2,j2,newMap=System.Array.create(0,null,System.Int32,this.width,this.height),puvodniMapa=System.Array.create(0,null,System.Int32,this.width,this.height),i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)newMap.set([i,j],this.map.get([i,j])),puvodniMapa.set([i,j],this.map.get([i,j]));for(iter=1;System.Linq.Enumerable.from(this.map).ofType(System.Int32).where($asm.$.Kingdom.HeightMapGen.f1).count()>0;){for(i1=0;i1<this.width;i1=i1+1|0)for(j1=0;j1<this.height;j1=j1+1|0)this.map.get([i1,j1])!==0&&this.GetNeighbours(i1,j1,0)>0&&(newMap.set([i1,j1],iter),puvodniMapa.set([i1,j1],0));for(iter=iter+1|0,i2=0;i2<this.width;i2=i2+1|0)for(j2=0;j2<this.height;j2=j2+1|0)this.map.set([i2,j2],puvodniMapa.get([i2,j2]))}this.map=newMap},GenerateDepths:function(){for(var j,iter,i1,j1,i2,j2,newMap=System.Array.create(0,null,System.Int32,this.width,this.height),lastMap=System.Array.create(0,null,System.Int32,this.width,this.height),i=0;i<this.width;i=i+1|0)for(j=0;j<this.height;j=j+1|0)newMap.set([i,j],this.map.get([i,j])),lastMap.set([i,j],this.map.get([i,j]));for(iter=0;System.Linq.Enumerable.from(this.map).ofType(System.Int32).where($asm.$.Kingdom.HeightMapGen.f2).count()>0;){for(i1=0;i1<this.width;i1=i1+1|0)for(j1=0;j1<this.height;j1=j1+1|0)this.map.get([i1,j1])<1&&this.GetNeighbours(i1,j1,1)>0&&(newMap.set([i1,j1],iter),lastMap.set([i1,j1],1));for(iter=iter-1|0,i2=0;i2<this.width;i2=i2+1|0)for(j2=0;j2<this.height;j2=j2+1|0)this.map.set([i2,j2],lastMap.get([i2,j2]))}this.map=newMap}}});Bridge.ns("Kingdom.HeightMapGen",$asm.$);Bridge.apply($asm.$.Kingdom.HeightMapGen,{f1:function(x){return x!==0},f2:function(x){return x<=0}});Bridge.define("Kingdom.Path",{fields:{pth:null,map:null,calledToMark:null},ctors:{init:function(){this.pth=new(System.Collections.Generic.List$1(Kingdom.Point));this.calledToMark=new(System.Collections.Generic.List$1(Kingdom.Point))},ctor:function(x1,y1,x2,y2,u){var x,y,posX,posY,p;for(this.$initialize(),this.map=System.Array.create(0,null,System.Single,Kingdom.App.tiles,Kingdom.App.tiles),this.map.set([x2,y2],Number.POSITIVE_INFINITY),x=0;x<Kingdom.App.tiles;x=x+1|0)for(y=0;y<Kingdom.App.tiles;y=y+1|0)u.canMove(x,y,u.owner)||this.map.set([x,y],Number.POSITIVE_INFINITY);for(this.markThisTileAndAllNeighbours(x1,y1,1),posX=x2,posY=y2,this.pth.add(new Kingdom.Point.$ctor1(posX,posY));;){if(Kingdom.App.debug&&console.log(System.String.format("Running cycle in Path constructor | {0} | {1}",Bridge.box(posX,System.Int32),Bridge.box(posY,System.Int32))),p=this.getBestNeighbour(posX,posY),p.x===-1&&p.y===-1)break;this.pth.add(p.$clone());posX=p.x;posY=p.y}this.pth.reverse()}},methods:{getBestNeighbour:function(x,y){var d,i,j,lowestValue;for(Kingdom.App.debug&&console.log(System.String.format("Get best neighbour | {0} | {1}",Bridge.box(x,System.Int32),Bridge.box(y,System.Int32))),d=new(System.Collections.Generic.Dictionary$2(Kingdom.Point,System.Single)),i=x-1|0;i<=(x+1|0);i=i+1|0)if(!(i<0)&&!(i>=Kingdom.App.tiles))for(j=y-1|0;j<=(y+1|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||this.map.get([i,j])!==0&&d.add(new Kingdom.Point.$ctor1(i,j),this.map.get([i,j]));return d.count===0?new Kingdom.Point.$ctor1(-1,-1):(lowestValue=System.Linq.Enumerable.from(d).aggregate($asm.$.Kingdom.Path.f1).key.$clone(),lowestValue.x===x&&lowestValue.y===y)?new Kingdom.Point.$ctor1(-1,-1):lowestValue.$clone()},markThisTileAndAllNeighbours:function(x,y,number){var i,j;if(Kingdom.App.debug&&console.log(System.String.format("Mark this tile and all neighbours | {0} | {1} | {2}",Bridge.box(x,System.Int32),Bridge.box(y,System.Int32),Bridge.box(number,System.Int32))),this.calledToMark.add(new Kingdom.Point.$ctor1(x,y)),this.map.get([x,y])===0)for(this.map.set([x,y],number),i=x-1|0;i<=(x+1|0);i=i+1|0)if(!(i<0)&&!(i>=Kingdom.App.tiles))for(j=y-1|0;j<=(y+1|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||System.Linq.Enumerable.from(this.calledToMark).where(function(a){return a.x===i&&a.y===y}).count()===0&&this.markThisTileAndAllNeighbours(i,j,number+1|0)}}});Bridge.ns("Kingdom.Path",$asm.$);Bridge.apply($asm.$.Kingdom.Path,{f1:function(l,r){return l.value<r.value?l:r}});Bridge.define("Kingdom.Player",{statics:{fields:{separator:0,researchedSeparator:0,listSeparator:0},ctors:{init:function(){this.separator=1e4;this.researchedSeparator=15e3;this.listSeparator=18e3}}},fields:{resources:0,color:0,name:null,end:!1,researches:null,currentlyResearching:null,researchMultiplier:0,currAI:null,id:0},ctors:{init:function(){this.name="Unknown Player";this.end=!1;this.researches=Kingdom.Research.Get();this.id=-1}},methods:{getString:function(){for(var s=System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}",Bridge.box(this.resources,System.Int32),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.color,System.Int32),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.name,Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.currAI!=null,System.Boolean,$box_.System.Boolean.toString),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.end,System.Boolean,$box_.System.Boolean.toString),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.getCurrResearchId(),System.Int32),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.researchMultiplier,System.Double,$box_.System.Double.toString,$box_.System.Double.getHashCode),Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.currentlyResearching!=null?this.currentlyResearching.turnsRemaining.toString():"",Bridge.box(Kingdom.Player.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)),i=0;i<this.researches.length;i=i+1|0)s=System.String.concat(s,this.researches[System.Array.index(i,this.researches)].state),i!==(this.researches.length-1|0)&&(s=System.String.concat(s,String.fromCharCode(Kingdom.Player.researchedSeparator)));return s},fromString:function(data){var s=System.String.split(data,[Kingdom.Player.separator].map(function(i){return String.fromCharCode(i)})),AI,a,i;for(this.resources=System.Int32.parse(s[System.Array.index(0,s)]),this.color=System.Int32.parse(s[System.Array.index(1,s)]),this.name=s[System.Array.index(2,s)],AI=Bridge.referenceEquals(s[System.Array.index(3,s)],"True"),this.end=Bridge.referenceEquals(s[System.Array.index(4,s)],"True"),this.currentlyResearching=this.getCurrResearch(System.Int32.parse(s[System.Array.index(5,s)])),this.currentlyResearching!=null&&(this.currentlyResearching.state=Kingdom.Research.States.InProgress,this.currentlyResearching.turnsRemaining=System.Int32.parse(s[System.Array.index(7,s)])),this.researchMultiplier=System.Double.parse(s[System.Array.index(6,s)]),a=System.String.split(s[System.Array.index(8,s)],[Kingdom.Player.researchedSeparator].map(function(i){return String.fromCharCode(i)})),i=0;i<System.Linq.Enumerable.from(this.researches).count();i=i+1|0)this.researches[System.Array.index(i,this.researches)].state=System.Int32.parse(a[System.Array.index(i,a)]);AI&&(this.currAI=new Kingdom.AIsoptik(this))},revealTilesNear:function(x,y,around){var i,i1,j,t;if(around===void 0&&(around=2),this.id===-1)for(i=0;i<Kingdom.Game.game.players.Count;i=i+1|0)if(Bridge.referenceEquals(Kingdom.Game.game.players.getItem(i),this)){this.id=i;break}for(i1=x-around|0;i1<=(x+around|0);i1=i1+1|0)if(!(i1<0)&&!(i1>=Kingdom.App.tiles))for(j=y-around|0;j<=(y+around|0);j=j+1|0)j<0||j>=Kingdom.App.tiles||(t=Bridge.as(Kingdom.Game.game.Map.get([i1,j,0]),Kingdom.Terrain),t.isFogForPlayers[System.Array.index(this.id,t.isFogForPlayers)]=!1)},getCurrResearchId:function(){var $t,id=-1,i=0,b;$t=Bridge.getEnumerator(this.researches);try{while($t.moveNext()){if(b=$t.Current,Bridge.referenceEquals(b,this.currentlyResearching)){id=i;break}i=i+1|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}return id},getCurrResearch:function(id){return id===-1?null:this.researches[System.Array.index(id,this.researches)]}}});Bridge.define("Kingdom.Point",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new Kingdom.Point}}},fields:{x:0,y:0},ctors:{$ctor1:function(x,y){this.$initialize();this.x=x;this.y=y},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([1852403652,this.x,this.y])},equals:function(o){return Bridge.is(o,Kingdom.Point)?Bridge.equals(this.x,o.x)&&Bridge.equals(this.y,o.y):!1},$clone:function(to){var s=to||new Kingdom.Point;return s.x=this.x,s.y=this.y,s}}});Bridge.define("Kingdom.Pong",{statics:{fields:{pong:null}},fields:{canvas:null,ctx:null,ingame:!1,score:System.UInt64(0),highscore:System.UInt64(0),ball:null,pX:0,pWidth:0,gameInfo:null},ctors:{init:function(){this.ingame=!1;this.score=System.UInt64(0);this.highscore=System.UInt64(0)},ctor:function(){this.$initialize();this.canvas=Bridge.as(document.getElementById("pong"),HTMLCanvasElement);this.ctx=this.canvas.getContext("2d");this.gameInfo=Bridge.as(document.getElementById("gameInfo"),HTMLParagraphElement);try{this.highscore=System.UInt64.parse(window.localStorage.highscore.toString())}catch($e1){$e1=System.Exception.create($e1)}Kingdom.Pong.pong=this;this.canvas.onclick=Bridge.fn.bind(this,$asm.$.Kingdom.Pong.f1);document.body.onmousemove=Bridge.fn.bind(this,$asm.$.Kingdom.Pong.f2);this.gameInfo.innerHTML=System.String.format("Score: {0}<br />Highscore: {1}",this.score,this.highscore)}},methods:{Reset:function(){this.ctx.clearRect(0,0,this.canvas.offsetWidth,this.canvas.offsetHeight);this.ingame=!1;this.score.gt(this.highscore)&&(this.highscore=this.score);this.ball=null;this.gameInfo.innerHTML=System.String.format("Score: {0}<br />Highscore: {1}",this.score,this.highscore);window.localStorage.highscore=this.highscore},Draw:function(){this.ctx.clearRect(0,0,this.canvas.offsetWidth,this.canvas.offsetHeight);this.ctx.fillRect(this.ball.x,this.ball.y,Kingdom.Ball.width,Kingdom.Ball.height);this.ctx.fillRect(Kingdom.Pong.pong.pX,(Bridge.Int.div(this.canvas.offsetWidth,100)|0)*95|0,Kingdom.Pong.pong.pWidth,(Bridge.Int.div(this.canvas.offsetWidth,100)|0)*2|0);this.gameInfo.innerHTML=System.String.format("Score: {0}<br />Highscore: {1}",this.score,this.highscore)}}});Bridge.ns("Kingdom.Pong",$asm.$);Bridge.apply($asm.$.Kingdom.Pong,{f1:function(ev){var $t,$t1;this.ingame||(Kingdom.Achievement.achievements[System.Array.index(Kingdom.Achievement.eAchievs.Upgrade,Kingdom.Achievement.achievements)].isSpecial=!1,Kingdom.Achievement.Check(),this.pWidth=200,this.pX=ev.clientX-250|0,this.ingame=!0,this.score=System.UInt64(0),this.ball=($t=new Kingdom.Ball,$t.x=Bridge.Int.div(this.canvas.offsetWidth,2)|0,$t.y=Bridge.Int.div(this.canvas.offsetHeight,2)|0,$t.vx=($t1=System.Array.init([-.5,-.4,-.3,-.2,-.1,.1,.2,.3,.4,.5],System.Double))[System.Array.index((new System.Random.ctor).next$1(10),$t1)],$t.vy=5,$t),this.ball.Move())},f2:function(ev){this.pX=(ev.clientX-90|0)-this.canvas.offsetLeft|0;this.pX<0&&(this.pX=0);(this.pX+this.pWidth|0)>this.canvas.offsetWidth&&(this.pX=this.canvas.offsetWidth-this.pWidth|0)}});Bridge.define("Kingdom.Research",{statics:{fields:{rssrch:null},ctors:{init:function(){this.rssrch=System.Array.init([new Kingdom.Research("Battla Medicine","All your units are healed by additional 1 HP every turn.",System.Array.init(0,0,System.Int32),4,2),new Kingdom.Research("Archery","Bow & Arrow, unlocks archers.",System.Array.init(0,0,System.Int32),4,2),new Kingdom.Research("Storages","Unlocks building 'Granary'",System.Array.init(0,0,System.Int32),4,3),new Kingdom.Research("General Research I","This research is needed to unlock new researches and buildings.",System.Array.init(0,0,System.Int32),10,4,1),new Kingdom.Research("Architecture","Your nation learns how to build better structures, allowing you to build walls.",System.Array.init([Kingdom.Research.researches.GeneralResearch_I],System.Int32),6,3),new Kingdom.Research("Ironsmithing","Learn how to work with iron, unlock Heavy Infantry",System.Array.init([Kingdom.Research.researches.GeneralResearch_I],System.Int32),7,4),new Kingdom.Research("General Research II","Advanced Research, that is needed to unlock new researches and buildings",System.Array.init([Kingdom.Research.researches.GeneralResearch_I],System.Int32),12,5,2.5),new Kingdom.Research("Mathematics","Mother of science. Unlocks Catapult unit",System.Array.init([Kingdom.Research.researches.GeneralResearch_II],System.Int32),10,4),new Kingdom.Research("Advanced Warfare","Researching new warfare techniques unlocks Berserk unit. This powerful melee unit gains back all movement and attack points after kill.",System.Array.init([Kingdom.Research.researches.GeneralResearch_II,Kingdom.Research.researches.Ironsmithing,Kingdom.Research.researches.Architecture],System.Int32),13,5),new Kingdom.Research("Agriculture Research","Starts agriculture research, allowing you to build Agriculture centrum, strong economy building.",System.Array.init([Kingdom.Research.researches.GeneralResearch_II,Kingdom.Research.researches.Architecture],System.Int32),18,5),new Kingdom.Research("Gunpowder","Brought from China, allows you to build to strongest unit in the game, the Musketeer.",System.Array.init([Kingdom.Research.researches.GeneralResearch_II,Kingdom.Research.researches.Ironsmithing,Kingdom.Research.researches.Mathematics],System.Int32),30,10,6)],Kingdom.Research)}},methods:{Get$1:function(researchPattern){var r=Kingdom.Research.rssrch[System.Array.index(researchPattern,Kingdom.Research.rssrch)];return new Kingdom.Research(r.name,r.description,r.reqResearch,r.cost,r.turnsRemaining,r.reqScienceLevel)},Get:function(){for(var r=new(System.Collections.Generic.List$1(Kingdom.Research)),i=0;i<Kingdom.Research.rssrch.length;i=i+1|0)r.add(Kingdom.Research.Get$1(i));return r.toArray()}}},fields:{name:null,description:null,reqResearch:null,cost:0,turnsRemaining:0,maximumTurnsRemaining:0,reqScienceLevel:0,state:0},ctors:{init:function(){this.state=Kingdom.Research.States.NotResearched},ctor:function(name,description,reqResearch,cost,reqTurns,reqScienceLevel){reqScienceLevel===void 0&&(reqScienceLevel=0);this.$initialize();this.name=name;this.description=description;this.reqResearch=reqResearch;this.maximumTurnsRemaining=reqTurns;this.cost=cost;this.turnsRemaining=reqTurns;this.reqScienceLevel=reqScienceLevel}},methods:{StartResearch:function(player){var $t,everythingResearched=System.Linq.Enumerable.from(this.reqResearch).count()===0,i;if(!everythingResearched){$t=Bridge.getEnumerator(this.reqResearch);try{while($t.moveNext())if(i=$t.Current,player.researches[System.Array.index(i,player.researches)].state===Kingdom.Research.States.Researched)everythingResearched=!0;else{everythingResearched=!1;break}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}}return everythingResearched&&this.state===Kingdom.Research.States.NotResearched&&this.cost<=player.resources&&player.currentlyResearching==null&&this.reqScienceLevel<=player.researchMultiplier?(player.resources=player.resources-this.cost|0,this.state=Kingdom.Research.States.InProgress,player.currentlyResearching=this,Kingdom.App.Announce(System.String.format("Research {0} started! It'll be finished in {1} turns.",this.name,Bridge.box(this.turnsRemaining,System.Int32))),!0):(everythingResearched?this.state!==Kingdom.Research.States.NotResearched?this.state===Kingdom.Research.States.InProgress?Kingdom.App.Announce("You are already researching this research"):Kingdom.App.Announce("You have already researched this research"):player.currentlyResearching!=null?Kingdom.App.Announce("You are already researching something"):this.reqScienceLevel>player.researchMultiplier?Kingdom.App.Announce("Your science level isn't big enough. Build more science buildings."):Kingdom.App.Announce("You don't have enough resources to start research"):Kingdom.App.Announce("You need to research another researches before researching this"),!1)},OnPlayerTurnBegin:function(player){this.state===Kingdom.Research.States.InProgress&&(this.turnsRemaining=this.turnsRemaining-1|0,this.turnsRemaining<=0&&(this.state=Kingdom.Research.States.Researched,player.currentlyResearching=null,Kingdom.App.Announce(System.String.format("{0} research completed! Go to research tab and choose another research.",this.name)),Bridge.referenceEquals(player,Kingdom.Game.game.players.getItem(0))&&(Bridge.referenceEquals(this.name,Kingdom.Research.rssrch[System.Array.index(Kingdom.Research.researches.Ironsmithing,Kingdom.Research.rssrch)].name)&&(Kingdom.Achievement.achievements[System.Array.index(Kingdom.Achievement.eAchievs.Ironman,Kingdom.Achievement.achievements)].isSpecial=!1),Bridge.referenceEquals(this.name,Kingdom.Research.rssrch[System.Array.index(Kingdom.Research.researches.Gunpowder,Kingdom.Research.rssrch)].name)&&(Kingdom.Achievement.achievements[System.Array.index(Kingdom.Achievement.eAchievs.PowerOfGunpowder,Kingdom.Achievement.achievements)].isSpecial=!1),Kingdom.Achievement.researchesResearched=Kingdom.Achievement.researchesResearched+1|0,Kingdom.Achievement.Check())))}}});Bridge.define("Kingdom.Research.researches",{$kind:"enum",statics:{fields:{Battle_Medicine:0,Archery:1,Storages:2,GeneralResearch_I:3,Architecture:4,Ironsmithing:5,GeneralResearch_II:6,Mathematics:7,AdvancedWarfare:8,AgricultureResearch:9,Gunpowder:10}}});Bridge.define("Kingdom.Research.States",{$kind:"enum",statics:{fields:{NotResearched:0,InProgress:1,Researched:2}}});Bridge.define("Kingdom.Resource.eResources",{$kind:"enum",statics:{fields:{FishDeerBush:0,Farm:1}}});Bridge.define("Kingdom.SaveManager",{statics:{fields:{basicSeparator:0,insideSeparator:0,listSeparator:0},ctors:{init:function(){this.basicSeparator=1e3;this.insideSeparator=2e3;this.listSeparator=3e3}},methods:{Save:function(){var stop=null,i,s,array,o,type;for(Kingdom.App.debug&&(stop=new System.Diagnostics.Stopwatch,stop.start()),i=0,s=new System.Text.StringBuilder,i=0;i<Kingdom.Game.game.players.Count;i=i+1|0)s.append(Kingdom.Game.game.players.getItem(i).getString()),i!==(Kingdom.Game.game.players.Count-1|0)&&s.append(String.fromCharCode(Kingdom.SaveManager.listSeparator));for(s.append(String.fromCharCode(Kingdom.SaveManager.basicSeparator)),s.append(Kingdom.Game.game.getString()),s.append(String.fromCharCode(Kingdom.SaveManager.basicSeparator)),array=System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).toArray(Kingdom.MapObject),i=0;i<System.Linq.Enumerable.from(array).count();){if(o=array[System.Array.index(i,array)],type=new Kingdom.SaveManager.moTypes,Bridge.is(o,Kingdom.City))type=Kingdom.SaveManager.moTypes.City;else if(Bridge.is(o,Kingdom.RecruitTent))type=Kingdom.SaveManager.moTypes.RecruitTent;else if(Bridge.is(o,Kingdom.Resource))type=Kingdom.SaveManager.moTypes.Resource;else if(Bridge.is(o,Kingdom.Terrain))type=Kingdom.SaveManager.moTypes.Terrain;else if(Bridge.is(o,Kingdom.Unit))type=Kingdom.SaveManager.moTypes.Unit;else throw new System.Exception("Unknown type of MapObject");s.append(System.String.concat(type.toString(),String.fromCharCode(Kingdom.SaveManager.insideSeparator),o.saveString()));i!==(System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject).count()-1|0)&&s.append(String.fromCharCode(Kingdom.SaveManager.listSeparator));i=i+1|0}return Kingdom.App.debug&&(stop.stop(),console.log("Saving game took ms: "+stop.milliseconds()),stop=null),s.toString()},Load:function(save){var $t,$t1,$t2,stop=null,mainParts,g,s,p,tile0_0textureWas;Kingdom.App.debug&&(stop=new System.Diagnostics.Stopwatch,stop.start());Kingdom.App.isAnnounceEnabled=!1;Kingdom.Achievement.Load();mainParts=System.String.split(save,[Kingdom.SaveManager.basicSeparator].map(function(i){return String.fromCharCode(i)}));g=new Kingdom.Game(64,"",2,!1,!1);g.fromString(mainParts[System.Array.index(1,mainParts)]);Kingdom.Game.game.players.clear();$t=Bridge.getEnumerator(System.String.split(mainParts[System.Array.index(0,mainParts)],[Kingdom.SaveManager.listSeparator].map(function(i){return String.fromCharCode(i)})));try{while($t.moveNext())s=$t.Current,p=new Kingdom.Player,p.fromString(s),Kingdom.Game.game.players.add(p)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}$t1=Bridge.getEnumerator(System.String.split(mainParts[System.Array.index(2,mainParts)],[Kingdom.SaveManager.listSeparator].map(function(i){return String.fromCharCode(i)})));try{while($t1.moveNext()){var s1=$t1.Current,a=System.String.split(s1,[Kingdom.SaveManager.insideSeparator].map(function(i){return String.fromCharCode(i)})),m=null;switch(System.Int32.parse(a[System.Array.index(0,a)])){case Kingdom.SaveManager.moTypes.City:m=new Kingdom.City.ctor;break;case Kingdom.SaveManager.moTypes.RecruitTent:m=new Kingdom.RecruitTent.ctor;break;case Kingdom.SaveManager.moTypes.Resource:m=new Kingdom.Resource.ctor;break;case Kingdom.SaveManager.moTypes.Terrain:m=new Kingdom.Terrain.ctor;break;case Kingdom.SaveManager.moTypes.Unit:m=new Kingdom.Unit.ctor}m.loadFromString(a[System.Array.index(1,a)]);Kingdom.Game.game.Map.set([m.x,m.y,m.z],m)}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$dispose()}tile0_0textureWas=Kingdom.Game.game.Map.get([0,0,0]).texture;$t2=Bridge.getEnumerator(System.String.split(mainParts[System.Array.index(2,mainParts)],[Kingdom.SaveManager.listSeparator].map(function(i){return String.fromCharCode(i)})));try{while($t2.moveNext()){var s2=$t2.Current,a1=System.String.split(s2,[Kingdom.SaveManager.insideSeparator].map(function(i){return String.fromCharCode(i)})),m1=null;switch(System.Int32.parse(a1[System.Array.index(0,a1)])){case Kingdom.SaveManager.moTypes.City:m1=new Kingdom.City.ctor;break;case Kingdom.SaveManager.moTypes.RecruitTent:m1=new Kingdom.RecruitTent.ctor;break;case Kingdom.SaveManager.moTypes.Resource:m1=new Kingdom.Resource.ctor;break;case Kingdom.SaveManager.moTypes.Terrain:m1=new Kingdom.Terrain.ctor;break;case Kingdom.SaveManager.moTypes.Unit:m1=new Kingdom.Unit.ctor}m1.loadFromStringSecondRound(a1[System.Array.index(1,a1)]);Kingdom.Game.game.Map.set([m1.x,m1.y,m1.z],m1)}}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$dispose()}Kingdom.Game.game.Map.get([0,0,0]).texture=tile0_0textureWas;Kingdom.App.isAnnounceEnabled=!0;Kingdom.App.debug&&(stop.stop(),console.log("Loading game took ms: "+stop.milliseconds()),stop=null)}}}});Bridge.define("Kingdom.SaveManager.moTypes",{$kind:"enum",statics:{fields:{City:0,RecruitTent:1,Resource:2,Terrain:3,Unit:4}}});Bridge.define("Kingdom.Terrain.Types",{$kind:"enum",statics:{fields:{Land:0,Sea:1,Mountain:2}}});Bridge.define("Kingdom.textureMap",{statics:{fields:{txMap:null}},fields:{tMap:null},ctors:{ctor:function(tMap){this.$initialize();this.tMap=tMap;Kingdom.textureMap.txMap=this}},methods:{getSubImageCoords:function(texture){return new Kingdom.Point.$ctor1(texture*System.Nullable.getValue(Kingdom.App.textureMapTextureLength)|0,0)}}});Bridge.define("Kingdom.Unit.Ability",{$kind:"enum",statics:{fields:{None:0,Walk:1,Swim:2,Climb:4,Dash:8,Combo:16,Regeneration:32,RangedAttack:64}},$flags:!0});Bridge.define("Kingdom.Unit.eUnits",{$kind:"enum",statics:{fields:{Warrior:0,Explorer:1,Archer:2,HeavyInfantry:3,Catapult:4,Chivalry:5,Ship:6}}});Bridge.define("Kingdom.AIsoptik",{inherits:[Kingdom.baseAI],fields:{BannedCities:null},ctors:{init:function(){this.BannedCities=new(System.Collections.Generic.List$1(Kingdom.City))},ctor:function(player){this.$initialize();Kingdom.baseAI.ctor.call(this);this.me=player}},methods:{Play:function(){var query,units,cities;Kingdom.App.debug&&(console.log("AI turn begin. Player:"),console.log(this.me));query=System.Linq.Enumerable.from(Kingdom.Game.game.Map).ofType(Kingdom.MapObject);units=query.where($asm.$.Kingdom.AIsoptik.f1).select($asm.$.Kingdom.AIsoptik.f2).where(Bridge.fn.bind(this,$asm.$.Kingdom.AIsoptik.f3));units.forEach(Bridge.fn.bind(this,$asm.$.Kingdom.AIsoptik.f4));cities=query.where($asm.$.Kingdom.AIsoptik.f5).select($asm.$.Kingdom.AIsoptik.f6).where(Bridge.fn.bind(this,$asm.$.Kingdom.AIsoptik.f7));cities.forEach(Bridge.fn.bind(this,$asm.$.Kingdom.AIsoptik.f8));cities.forEach(Bridge.fn.bind(this,$asm.$.Kingdom.AIsoptik.f9));this.Research()},PlayUnit:function(unit){var map=Kingdom.Game.game.Map,x=unit.x,y=unit.y,city;if(Kingdom.App.debug&&console.log(unit),Bridge.is(map.get([x,y,1]),Kingdom.City)){if(city=Bridge.as(map.get([x,y,1]),Kingdom.City),city.canCapture()){city.Capture();return}if(!Bridge.referenceEquals(city.owner,unit.owner)&&!city.readyToCapture)return}var nearestNonOccupiedNotYourCities=System.Linq.Enumerable.from(map).ofType(Kingdom.MapObject).where($asm.$.Kingdom.AIsoptik.f10).select($asm.$.Kingdom.AIsoptik.f11).where(function(a){return!Bridge.referenceEquals(a.owner,unit.owner)&&map.get([a.x,a.y,2])==null}).orderBy(function(a){return Math.abs(unit.x-a.x|0)+Math.abs(unit.y-a.y|0)|0}).toArray(Kingdom.City),c=null,i=0,done=!1;do(c=i>=System.Linq.Enumerable.from(nearestNonOccupiedNotYourCities).count()?null:nearestNonOccupiedNotYourCities[System.Array.index(i,nearestNonOccupiedNotYourCities)],i=i+1|0,this.BannedCities.contains(c)||c==null)||(done=this.TryToMoveToNearestCity(unit,c),done||this.BannedCities.add(c));while(!done);done},TryToMoveToNearestCity:function(unit,city){if(unit.canMove(city.x,city.y,unit.owner))return unit.Move(city.x,city.y,unit.owner);for(var turns=unit.turns,tx=unit.x,ty=unit.y;turns>0;)tx<city.x&&unit.canMove(tx+1|0,ty,unit.owner)?tx=tx+1|0:tx>city.x&&unit.canMove(tx-1|0,ty,unit.owner)&&(tx=tx-1|0),ty<city.y&&unit.canMove(tx,ty+1|0,unit.owner)?ty=ty+1|0:ty>city.y&&unit.canMove(tx,ty-1|0,unit.owner)&&(ty=ty-1|0),turns=turns-1|0;return unit.Move(tx,ty,unit.owner)},RecruitCity:function(c){Kingdom.App.debug&&console.log(c)},BuildCity:function(c){Kingdom.App.debug&&console.log(c)},Research:function(){Kingdom.App.debug&&console.log("Starting research: none")}}});Bridge.ns("Kingdom.AIsoptik",$asm.$);Bridge.apply($asm.$.Kingdom.AIsoptik,{f1:function(x){return Bridge.is(x,Kingdom.Unit)},f2:function(x){return Bridge.as(x,Kingdom.Unit)},f3:function(x){return Bridge.referenceEquals(x.owner,this.me)},f4:function(x){this.PlayUnit(x)},f5:function(x){return Bridge.is(x,Kingdom.City)},f6:function(x){return Bridge.as(x,Kingdom.City)},f7:function(x){return Bridge.referenceEquals(x.owner,this.me)||x.canCapture()},f8:function(x){this.RecruitCity(x)},f9:function(x){this.BuildCity(x)},f10:function(a){return Bridge.is(a,Kingdom.City)},f11:function(a){return Bridge.as(a,Kingdom.City)}});Bridge.define("Kingdom.OwnerObject",{inherits:[Kingdom.MapObject],fields:{owner:null}});Bridge.define("Kingdom.Terrain",{inherits:[Kingdom.MapObject],statics:{fields:{fogSeparator:0},ctors:{init:function(){this.fogSeparator=10002}}},fields:{type:0,isFogForPlayers:null},ctors:{$ctor1:function(type,texture,x,y,z,makeFog,numberOfPlayers){var fog,i;for(this.$initialize(),Kingdom.MapObject.ctor.call(this),this.type=type,this.texture=texture,this.x=x,this.y=y,this.z=z,fog=new(System.Collections.Generic.List$1(System.Boolean)),i=0;i<numberOfPlayers;i=i+1|0)fog.add(makeFog);this.isFogForPlayers=fog.toArray()},ctor:function(){this.$initialize();Kingdom.MapObject.ctor.call(this)}},methods:{NextTurn:function(){},saveString:function(){for(var s=System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",Bridge.box(this.type,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.texture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.x,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.y,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.z,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)),i=0;i<this.isFogForPlayers.length;i=i+1|0)s=System.String.concat(s,System.Boolean.toString(this.isFogForPlayers[System.Array.index(i,this.isFogForPlayers)])),i!==(this.isFogForPlayers.length-1|0)&&(s=System.String.concat(s,String.fromCharCode(Kingdom.Terrain.fogSeparator)));return s},loadFromString:function(save){var $t,saves=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)})),fog,mf,s;this.type=System.Int32.parse(saves[System.Array.index(0,saves)]);this.texture=System.Int32.parse(saves[System.Array.index(1,saves)]);this.x=System.Int32.parse(saves[System.Array.index(2,saves)]);this.y=System.Int32.parse(saves[System.Array.index(3,saves)]);this.z=System.Int32.parse(saves[System.Array.index(4,saves)]);fog=System.String.split(saves[System.Array.index(5,saves)],[Kingdom.Terrain.fogSeparator].map(function(i){return String.fromCharCode(i)}));mf=new(System.Collections.Generic.List$1(System.Boolean));$t=Bridge.getEnumerator(fog);try{while($t.moveNext())s=$t.Current,mf.add(Bridge.referenceEquals(s,"True"))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}this.isFogForPlayers=mf.toArray()},loadFromStringSecondRound:function(){}}});Bridge.define("Kingdom.City",{inherits:[Kingdom.OwnerObject],statics:{fields:{referenceSeparator:0,buildingStatesSeparator:0},ctors:{init:function(){this.referenceSeparator=3e4;this.buildingStatesSeparator=35e3}},methods:{SaveReference:function(c){return System.String.format("{0}{1}{2}",Bridge.box(c.x,System.Int32),Bridge.box(Kingdom.City.referenceSeparator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(c.y,System.Int32))}}},fields:{buildings:null,currentlyBuilding:null,name:null,level:0,maxpop:0,production:0,_currpop:0,readyToCapture:!1},props:{currpop:{get:function(){return this._currpop},set:function(value){for(this._currpop=value;value>=this.maxpop;)this._currpop=value-this.maxpop|0,this.maxpop=this.maxpop+2|0,this.level=this.level+1|0,this.production=this.production+1|0,Kingdom.App.debug&&console.log("City leveled up  (+2 maxpop, +1 level, +1 production)"),Kingdom.App.Announce("One of your cities has leveled up!");while(value<0)this.maxpop=this.maxpop-2|0,this._currpop=value+this.maxpop|0,this.level=this.level-1|0,this.production=this.production-1|0,Kingdom.App.debug&&console.log("City lost 1 level (-2 maxpop, -1 level, -1 production)"),Kingdom.App.Announce("One of your cities lost one level due to lack of prosperity.")}}},ctors:{init:function(){this.buildings=Kingdom.Building.Get();this.maxpop=2;this.readyToCapture=!1},$ctor1:function(owner,texture,name,x,y,z){this.$initialize();Kingdom.OwnerObject.ctor.call(this);this.owner=owner;this.name=name;this.level=0;this.production=1;this.currpop=0;this.x=x;this.y=y;this.z=z;this.texture=texture},ctor:function(){this.$initialize();Kingdom.OwnerObject.ctor.call(this)}},methods:{NextTurn:function(){if(Kingdom.Game.game.Map.get([this.x,this.y,2])==null||Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,this.owner))this.readyToCapture&&(this.readyToCapture=!1);else{this.readyToCapture||(this.readyToCapture=!0);var pState=Kingdom.Game.game.playerState;this.readyToCapture&&Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,Kingdom.Game.game.players.getItem(pState===0?Kingdom.Game.game.players.Count-1|0:pState-1|0))&&Kingdom.App.Announce("There is a city ready to capture!");this.readyToCapture&&!Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,this.owner)&&Bridge.referenceEquals(this.owner,Kingdom.Game.game.players.getItem(pState===0?Kingdom.Game.game.players.Count-1|0:pState-1|0))&&Kingdom.App.Announce("One of your cities is under siege!")}this.owner!=null&&Bridge.referenceEquals(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),this.owner)&&(this.owner.resources=this.owner.resources+this.production|0);Kingdom.Game.game.Map.get([this.x,this.y,2])!=null&&Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,this.owner)&&Bridge.referenceEquals(Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState),this.owner)&&(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).hp=Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).hp+2|0,Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).hp>Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).maxhp&&(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).hp=Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).maxhp))},Capture:function(){if(this.canCapture()){this.owner=Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner;switch(this.owner.color){case 0:this.texture=Kingdom.App.textures.city_blue;break;case 1:this.texture=Kingdom.App.textures.city_red;break;case 2:this.texture=Kingdom.App.textures.city_green;break;case 3:this.texture=Kingdom.App.textures.city_yellow}return this.readyToCapture=!1,Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).turns=0,Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).canAttack=!1,this.owner.revealTilesNear(this.x,this.y,4),Kingdom.App.debug&&console.log("A city was captured"),Kingdom.App.DisplayPlayerInfo(),Bridge.referenceEquals(this.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.citiesCaptured=Kingdom.Achievement.citiesCaptured+1|0,Kingdom.Achievement.Check()),!0}return!1},canCapture:function(){return this.readyToCapture&&Kingdom.Game.game.Map.get([this.x,this.y,2])!=null&&!Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,this.owner)&&Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,2]),Kingdom.Unit).owner,Kingdom.Game.game.players.getItem(Kingdom.Game.game.playerState))},loadFromString:function(save){var s=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)})),i,bs;for(this.owner=Bridge.referenceEquals(s[System.Array.index(0,s)],"-1")?null:Kingdom.Game.game.players.getItem(System.Int32.parse(s[System.Array.index(0,s)])),this.name=s[System.Array.index(1,s)],this.level=System.Int32.parse(s[System.Array.index(2,s)]),this.production=System.Int32.parse(s[System.Array.index(3,s)]),this.currpop=System.Int32.parse(s[System.Array.index(4,s)]),this.x=System.Int32.parse(s[System.Array.index(5,s)]),this.y=System.Int32.parse(s[System.Array.index(6,s)]),this.z=System.Int32.parse(s[System.Array.index(7,s)]),this.texture=System.Int32.parse(s[System.Array.index(8,s)]),this.maxpop=System.Int32.parse(s[System.Array.index(9,s)]),this.readyToCapture=Bridge.referenceEquals(s[System.Array.index(10,s)],"True"),this.buildings=Kingdom.Building.Get(),this.currentlyBuilding=this.getCurrBuilding(System.Int32.parse(s[System.Array.index(11,s)])),this.currentlyBuilding!=null&&(this.currentlyBuilding.state=Kingdom.Building.states.InProgress,this.currentlyBuilding.turnsRemaining=System.Int32.parse(s[System.Array.index(13,s)])),i=0;i<System.Linq.Enumerable.from(this.buildings).count();i=i+1|0)bs=System.String.split(s[System.Array.index(12,s)],[Kingdom.City.buildingStatesSeparator].map(function(i){return String.fromCharCode(i)})),this.buildings[System.Array.index(i,this.buildings)].state=System.Int32.parse(bs[System.Array.index(i,bs)])},loadFromStringSecondRound:function(){},saveString:function(){for(var s=System.String.concat(System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}",Bridge.box(Kingdom.Game.getPlayerId(this.owner),System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.name,Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.level,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.production,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.currpop,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.x,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.y,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.z,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.texture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)),System.String.format("{0}{1}{2}{3}{4}{5}",Bridge.box(this.maxpop,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.readyToCapture,System.Boolean,$box_.System.Boolean.toString),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.getCurrBuildingId(),System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode))),i=0;i<System.Linq.Enumerable.from(this.buildings).count();i=i+1|0)s=System.String.concat(s,this.buildings[System.Array.index(i,this.buildings)].state),i!==(System.Linq.Enumerable.from(this.buildings).count()-1|0)&&(s=System.String.concat(s,String.fromCharCode(Kingdom.City.buildingStatesSeparator)));return System.String.concat(s,System.String.format("{0}{1}",Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.currentlyBuilding!=null?this.currentlyBuilding.turnsRemaining.toString():""))},getCurrBuildingId:function(){var $t,id=-1,i=0,b;$t=Bridge.getEnumerator(this.buildings);try{while($t.moveNext()){if(b=$t.Current,Bridge.referenceEquals(b,this.currentlyBuilding)){id=i;break}i=i+1|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}return id},getCurrBuilding:function(id){return id===-1?null:this.buildings[System.Array.index(id,this.buildings)]}}});Bridge.define("Kingdom.RecruitTent",{inherits:[Kingdom.OwnerObject],statics:{fields:{price:0},ctors:{init:function(){this.price=7}},methods:{Build:function(p,x,y){if(p.resources>=Kingdom.RecruitTent.price&&Bridge.as(Kingdom.Game.game.Map.get([x,y,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Land&&Kingdom.Game.game.Map.get([x,y,1])==null&&Kingdom.Game.game.Map.get([x,y,2])!=null&&Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([x,y,2]),Kingdom.Unit).owner,p)){p.resources=p.resources-Kingdom.RecruitTent.price|0;var t=Kingdom.App.textures.border;switch(p.color){case 0:t=Kingdom.App.textures.city_recruitTent_blue;break;case 1:t=Kingdom.App.textures.city_recruitTent_red;break;case 2:t=Kingdom.App.textures.city_recruitTent_green;break;case 3:t=Kingdom.App.textures.city_recruitTent_yellow}return Bridge.referenceEquals(p,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.recruitTentsBuilt=Kingdom.Achievement.recruitTentsBuilt+1|0,Kingdom.Achievement.Check()),new Kingdom.RecruitTent.$ctor1(p,t,x,y)}return null}}},ctors:{$ctor1:function(owner,texture,x,y,z){z===void 0&&(z=1);this.$initialize();Kingdom.OwnerObject.ctor.call(this);this.owner=owner;this.x=x;this.y=y;this.z=z;this.texture=texture},ctor:function(){this.$initialize();Kingdom.OwnerObject.ctor.call(this)}},methods:{NextTurn:function(){var o=Kingdom.Game.game.Map.get([this.x,this.y,2]),u;o!=null&&Bridge.is(o,Kingdom.Unit)&&(u=Bridge.as(o,Kingdom.Unit),Bridge.referenceEquals(u.owner,this.owner)?(u.hp=u.hp+1|0,u.hp>u.maxhp&&(u.hp=u.maxhp)):(Kingdom.Game.game.Map.set([this.x,this.y,this.z],null),u.owner.resources=u.owner.resources+4|0,Bridge.referenceEquals(u.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.recruitTentsDestroyed=Kingdom.Achievement.recruitTentsDestroyed+1|0,Kingdom.Achievement.Check())))},saveString:function(){return System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}",Bridge.box(Kingdom.Game.getPlayerId(this.owner),System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.texture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.x,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.y,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.z,System.Int32))},loadFromString:function(save){var s=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)}));this.owner=Kingdom.Game.game.players.getItem(System.Int32.parse(s[System.Array.index(0,s)]));this.texture=System.Int32.parse(s[System.Array.index(1,s)]);this.x=System.Int32.parse(s[System.Array.index(2,s)]);this.y=System.Int32.parse(s[System.Array.index(3,s)]);this.z=System.Int32.parse(s[System.Array.index(4,s)])},loadFromStringSecondRound:function(){}}});Bridge.define("Kingdom.Resource",{inherits:[Kingdom.OwnerObject],statics:{fields:{resources:null},ctors:{init:function(){this.resources=System.Array.init([new Kingdom.Resource.$ctor1(null,0,1,2,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unavalibeTile,!0,-1,-1,-1),new Kingdom.Resource.$ctor1(null,0,2,5,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unavalibeTile,!1,-1,-1,-1)],Kingdom.Resource)}},methods:{getResource:function(cityOwner,pattern,texture,readyTexture,x,y){var r=new Kingdom.Resource.$ctor1(cityOwner,pattern.everyTurn_productionBoost,pattern.firstTurn_productionBoost,pattern.cost,readyTexture,texture,pattern.destroyAfterDone,x,y,1);return r.type=Bridge.referenceEquals(pattern,Kingdom.Resource.resources[System.Array.index(1,Kingdom.Resource.resources)])?1:0,r}}},fields:{cityOwner:null,ready:!1,destroyAfterDone:!1,everyTurn_productionBoost:0,firstTurn_productionBoost:0,type:0,cost:0,readyTexture:0},ctors:{$ctor1:function(cityOwner,et_prodBoost,ft_prodBoost,cost,readyTexture,texture,destroyAfterDone,x,y,z){this.$initialize();Kingdom.OwnerObject.ctor.call(this);this.cityOwner=cityOwner;this.owner=cityOwner==null?null:cityOwner.owner;this.ready=!1;this.everyTurn_productionBoost=et_prodBoost;this.firstTurn_productionBoost=ft_prodBoost;this.cost=cost;this.readyTexture=readyTexture;this.texture=texture;this.x=x;this.y=y;this.z=z;this.destroyAfterDone=destroyAfterDone},ctor:function(){this.$initialize();Kingdom.OwnerObject.ctor.call(this)}},methods:{NextTurn:function(){this.ready&&this.cityOwner!=null&&this.cityOwner.owner!=null&&this.everyTurn_productionBoost!==0&&(this.cityOwner.currpop=this.cityOwner.currpop+this.everyTurn_productionBoost|0)},Rebuild:function(){return this.canRebuild()?(this.owner=this.cityOwner.owner,this.cityOwner.owner.resources=this.cityOwner.owner.resources-this.cost|0,this.ready=!0,this.texture=this.readyTexture,this.cityOwner.currpop=this.cityOwner.currpop+this.firstTurn_productionBoost|0,this.destroyAfterDone&&Kingdom.Game.game.Map.set([this.x,this.y,1],null),Bridge.referenceEquals(this.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.resourcesRebuilt=Kingdom.Achievement.resourcesRebuilt+1|0,Kingdom.Achievement.Check()),!0):!1},canRebuild:function(){return!this.ready&&this.cityOwner!=null&&this.cityOwner.owner!=null&&this.cityOwner.owner.resources>=this.cost},saveString:function(){return System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}",Kingdom.City.SaveReference(this.cityOwner),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.ready,System.Boolean,$box_.System.Boolean.toString),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.texture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.readyTexture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.x,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.y,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.type,System.Int32))},loadFromString:function(save){var s=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)})),pattern;this.ready=Bridge.referenceEquals(s[System.Array.index(1,s)],"True");this.texture=System.Int32.parse(s[System.Array.index(2,s)]);this.readyTexture=System.Int32.parse(s[System.Array.index(3,s)]);this.x=System.Int32.parse(s[System.Array.index(4,s)]);this.y=System.Int32.parse(s[System.Array.index(5,s)]);this.z=1;this.type=System.Int32.parse(s[System.Array.index(6,s)]);pattern=Kingdom.Resource.resources[System.Array.index(this.type,Kingdom.Resource.resources)];this.everyTurn_productionBoost=pattern.everyTurn_productionBoost;this.firstTurn_productionBoost=pattern.firstTurn_productionBoost;this.cost=pattern.cost;this.destroyAfterDone=pattern.destroyAfterDone},loadFromStringSecondRound:function(save){var $t,s=System.String.split(($t=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)})))[System.Array.index(0,$t)],[Kingdom.City.referenceSeparator].map(function(i){return String.fromCharCode(i)}));this.cityOwner=Bridge.as(Kingdom.Game.game.Map.get([System.Int32.parse(s[System.Array.index(0,s)]),System.Int32.parse(s[System.Array.index(1,s)]),1]),Kingdom.City);this.loadFromString(save)}}});Bridge.define("Kingdom.Unit",{inherits:[Kingdom.OwnerObject],statics:{fields:{reqResearchSeparator:0,basicExpNeeded:0,expIncreasePerLevel:0,hpIncreasePerLevel:0,units:null},ctors:{init:function(){this.reqResearchSeparator=4e4;this.basicExpNeeded=10;this.expIncreasePerLevel=5;this.hpIncreasePerLevel=5;this.units=System.Array.init([new Kingdom.Unit.$ctor1(null,"Warrior",10,3,2,1,2,5,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_warrior,System.Array.init(0,0,System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Explorer",5,5,1,0,2,39,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_explorer,System.Array.init(0,0,System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Archer",7,3,3,0,3,71,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_archer,System.Array.init([Kingdom.Research.researches.Archery],System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Heavy Infantry",15,2,3,1,5,Kingdom.Unit.Ability.Walk,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_heavyInfantry,System.Array.init([Kingdom.Research.researches.Ironsmithing],System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Cataput",7,2,4,0,5,65,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_catapult,System.Array.init([Kingdom.Research.researches.Mathematics],System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Berserk",12,3,3,0,8,25,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_berserk,System.Array.init([Kingdom.Research.researches.AdvancedWarfare],System.Int32),-1,-1,-1),new Kingdom.Unit.$ctor1(null,"Musketeer",10,3,6,1,16,69,Kingdom.App.textures.unavalibeTile,Kingdom.App.textures.unit_musketeer,System.Array.init([Kingdom.Research.researches.Gunpowder],System.Int32),-1,-1,-1)],Kingdom.Unit)}},methods:{getUnit:function(owner,texture,pattern,x,y){return new Kingdom.Unit.$ctor1(owner,pattern.name,pattern.maxhp,pattern.maxturns,pattern.attack,pattern.defense,pattern.cost,pattern.ability,texture,pattern.weaponTexture,pattern.reqResearch,x,y,2)}}},fields:{name:null,hp:0,maxhp:0,turns:0,maxturns:0,level:0,attack:0,defense:0,cost:0,canAttack:!1,alive:!1,ability:0,weaponTexture:0,reqResearch:null,_exp:0},props:{exp:{get:function(){return this._exp},set:function(value){for(var maxExp=Kingdom.Unit.basicExpNeeded+(this.level*Kingdom.Unit.expIncreasePerLevel|0)|0;value>=maxExp;)value=value-maxExp|0,this.level=this.level+1|0,this.maxhp=this.maxhp+Kingdom.Unit.hpIncreasePerLevel|0,this.hp=this.maxhp;this._exp=value}}},ctors:{$ctor1:function(owner,name,maxhp,turns,attack,defense,cost,ability,texture,weaponTexture,reqResearch,x,y,z){this.$initialize();Kingdom.OwnerObject.ctor.call(this);this.owner=owner;this.name=name;this.hp=maxhp;this.maxhp=maxhp;this.turns=0;this.maxturns=turns;this.attack=attack;this.defense=defense;this.cost=cost;this.ability=ability;this.level=0;this._exp=0;this.canAttack=!1;this.alive=!0;this.texture=texture;this.weaponTexture=weaponTexture;this.reqResearch=reqResearch;this.x=x;this.y=y;this.z=z},ctor:function(){this.$initialize();Kingdom.OwnerObject.ctor.call(this)}},methods:{NextTurn:function(){var $t;($t=this.owner.researches)[System.Array.index(Kingdom.Research.researches.Battle_Medicine,$t)].state===Kingdom.Research.States.Researched&&(this.hp=this.hp+1|0,this.hp>this.maxhp&&(this.hp=this.maxhp));this.turns=this.maxturns;this.canAttack=!0;System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Regeneration,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(this.hp=this.hp+2|0,this.hp>this.maxhp&&(this.hp=this.maxhp))},Attack:function(target){var $t,$t1,debug_attBack=!1,debug_att1=0,debug_att2=0,attackStrength;!this.canAttack||Bridge.referenceEquals(target.owner,this.owner)||Kingdom.App.useFog&&($t=Bridge.as(Kingdom.Game.game.Map.get([target.x,target.y,0]),Kingdom.Terrain).isFogForPlayers)[System.Array.index(Kingdom.Game.game.playerState,$t)]||(this.canAttack=!1,System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Dash,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))||(this.turns=0),attackStrength=this.attack*2|0,attackStrength=attackStrength-target.defense|0,Bridge.is(Kingdom.Game.game.Map.get([target.x,target.y,1]),Kingdom.City)&&($t1=Bridge.as(Kingdom.Game.game.Map.get([target.x,target.y,1]),Kingdom.City).buildings)[System.Array.index(Kingdom.Building.eBuildings.Walls,$t1)].state===Kingdom.Building.states.Builded&&(attackStrength=attackStrength-1|0),Bridge.as(Kingdom.Game.game.Map.get([this.x,this.y,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Sea&&(attackStrength=attackStrength-1|0),Bridge.as(Kingdom.Game.game.Map.get([target.x,target.y,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Sea&&(attackStrength=attackStrength+1|0),attackStrength<1&&(attackStrength=1),debug_att1=attackStrength,target.hp=target.hp-attackStrength|0,target.hp<=0?(target.alive=!1,Kingdom.Game.game.Map.set([target.x,target.y,target.z],null),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Combo,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(this.canAttack=!0,this.turns=this.maxturns),Bridge.referenceEquals(this.owner,Kingdom.Game.game.players.getItem(0))?(Kingdom.Achievement.enemiesKilled=Kingdom.Achievement.enemiesKilled+1|0,Kingdom.Achievement.Check()):Bridge.referenceEquals(target.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.unitsLost=Kingdom.Achievement.unitsLost+1|0,Kingdom.Achievement.Check())):(!System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.RangedAttack,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))||System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.RangedAttack,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&System.Enum.hasFlag(target.ability,Bridge.box(Kingdom.Unit.Ability.RangedAttack,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString)))&&(debug_attBack=!0,attackStrength=target.attack*2|0,attackStrength=attackStrength-this.defense|0,attackStrength<1&&(attackStrength=1),debug_att2=attackStrength,this.hp=this.hp-attackStrength|0,this.hp<=0&&(this.alive=!1,Kingdom.Game.game.Map.set([this.x,this.y,this.z],null),Bridge.referenceEquals(target.owner,Kingdom.Game.game.players.getItem(0))?(Kingdom.Achievement.enemiesKilled=Kingdom.Achievement.enemiesKilled+1|0,Kingdom.App.killedInDefense=Kingdom.App.killedInDefense+1|0):Bridge.referenceEquals(this.owner,Kingdom.Game.game.players.getItem(0))&&(Kingdom.Achievement.unitsLost=Kingdom.Achievement.unitsLost+1|0,Kingdom.Achievement.Check()))));Kingdom.App.debug&&console.log(System.String.format("Unit {0} (player: {1}) attacked {2} (player: {3}). Attack back: {4}. Attack 1: {5}. Attack 2: {6}",this.name,Bridge.box(this.owner.color,System.Int32),target.name,Bridge.box(target.owner.color,System.Int32),Bridge.box(debug_attBack,System.Boolean,$box_.System.Boolean.toString),Bridge.box(debug_att1,System.Int32),Bridge.box(debug_att2,System.Int32)))},Move:function(tX,tY,player){return this.canMove(tX,tY,player)?Bridge.as(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit)!=null?(Math.max(Math.abs(this.x-tX|0),Math.abs(this.y-tY|0))<=1&&(Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit).owner,this.owner)||this.Attack(Bridge.as(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit))),!1):(this.turns=this.turns-Math.max(Math.abs(this.x-tX|0),Math.abs(this.y-tY|0))|0,Kingdom.Game.game.Map.set([tX,tY,2],this),Kingdom.Game.game.Map.set([this.x,this.y,this.z],null),this.x=tX,this.y=tY,this.owner.revealTilesNear(this.x,this.y),!0):!1},canMove:function(tX,tY,player){var $t,terrain=!1;return Bridge.as(Kingdom.Game.game.Map.get([tX,tY,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Land?(terrain=System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Walk,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString)),Kingdom.App.debug&&console.log(System.String.concat(System.String.format("Unit asks if can move to Land. Ability Walk: ",null),System.Boolean.toString(terrain)))):Bridge.as(Kingdom.Game.game.Map.get([tX,tY,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Mountain?(terrain=System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Walk,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Climb,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString)),Kingdom.App.debug&&console.log(System.String.concat(System.String.format("Unit asks if can move to Mountain. Ability Walk & Climb: ",null),System.Boolean.toString(terrain)))):Bridge.as(Kingdom.Game.game.Map.get([tX,tY,0]),Kingdom.Terrain).type===Kingdom.Terrain.Types.Sea&&(terrain=System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Swim,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString)),Kingdom.App.debug&&console.log(System.String.concat(System.String.format("Unit asks if can move to Sea. Ability Swim: ",null),System.Boolean.toString(terrain)))),Kingdom.App.debug&&console.log(this.ability),(!Kingdom.App.useFog||!($t=Bridge.as(Kingdom.Game.game.Map.get([tX,tY,0]),Kingdom.Terrain).isFogForPlayers)[System.Array.index(Kingdom.Game.game.playerState,$t)])&&Bridge.referenceEquals(player,this.owner)&&(Math.max(Math.abs(this.x-tX|0),Math.abs(this.y-tY|0))<=this.turns||Math.max(Math.abs(this.x-tX|0),Math.abs(this.y-tY|0))<=1&&Kingdom.Game.game.Map.get([tX,tY,2])!=null&&!Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit).owner,this.owner)&&this.canAttack)&&terrain},canAttackToSomebody:function(tX,tY){var i,j;if(tX===void 0&&(tX=-1),tY===void 0&&(tY=-1),!this.canAttack)return!1;if(tX===-1||tY===-1){for(i=this.x-1|0;i<=(this.x+1|0);i=i+1|0)if(i<0||i>=Kingdom.App.tiles)continue;else for(j=this.y-1|0;j<=(this.y+1|0);j=j+1|0)if(j<0||j>=Kingdom.App.tiles)continue;else if(Bridge.is(Kingdom.Game.game.Map.get([i,j,2]),Kingdom.Unit)&&!Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([i,j,2]),Kingdom.Unit).owner,this.owner))return!0}else return Bridge.is(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit)&&!Bridge.referenceEquals(Bridge.as(Kingdom.Game.game.Map.get([tX,tY,2]),Kingdom.Unit).owner,this.owner);return!1},getAbilitiesInfo:function(){var s="";return System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Walk,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Walk<\/strong>: This unit can move thru 'land' terrain.<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Climb,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Climb<\/strong>: This unit can move thru 'mountain' terrain.<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Swim,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Swim<\/strong>: This unit can move thru 'sea' terrain.<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Dash,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Dash<\/strong>: Attack doesn't end this unit's turn. (Can move after attacking)<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Combo,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Combo<\/strong>: Gains all movement points and ability to attack once more after killing an unit. (Can move & attack after killing opponent)<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.RangedAttack,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Ranged Attack<\/strong>: Units without Ranged Attack ability cannot attack back when attacked by this unit.<br />")),System.Enum.hasFlag(this.ability,Bridge.box(Kingdom.Unit.Ability.Regeneration,Kingdom.Unit.Ability,$box_.Kingdom.Unit.Ability.toString))&&(s=System.String.concat(s,"<strong>Regeneration<\/strong>: This unit regenerates 2 HP each turn, making it much harder to kill.<br />")),s},loadFromString:function(save){var s=System.String.split(save,[Kingdom.MapObject.separator].map(function(i){return String.fromCharCode(i)}));this.owner=Kingdom.Game.game.players.getItem(System.Int32.parse(s[System.Array.index(0,s)]));this.name=s[System.Array.index(1,s)];this.maxhp=System.Int32.parse(s[System.Array.index(2,s)]);this.hp=System.Int32.parse(s[System.Array.index(3,s)]);this.maxturns=System.Int32.parse(s[System.Array.index(4,s)]);this.turns=System.Int32.parse(s[System.Array.index(5,s)]);this.attack=System.Int32.parse(s[System.Array.index(6,s)]);this.defense=System.Int32.parse(s[System.Array.index(7,s)]);this.cost=System.Int32.parse(s[System.Array.index(8,s)]);this.ability=System.Int32.parse(s[System.Array.index(9,s)]);this.texture=System.Int32.parse(s[System.Array.index(10,s)]);this.weaponTexture=System.Int32.parse(s[System.Array.index(11,s)]);this.reqResearch=this.getReqResearches(s[System.Array.index(12,s)]);this.x=System.Int32.parse(s[System.Array.index(13,s)]);this.y=System.Int32.parse(s[System.Array.index(14,s)]);this.z=System.Int32.parse(s[System.Array.index(15,s)]);this._exp=System.Int32.parse(s[System.Array.index(16,s)]);this.level=System.Int32.parse(s[System.Array.index(17,s)]);this.canAttack=Bridge.referenceEquals(s[System.Array.index(18,s)],"True");this.alive=Bridge.referenceEquals(s[System.Array.index(19,s)],"True")},loadFromStringSecondRound:function(){},saveString:function(){return System.String.concat(System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}",Bridge.box(Kingdom.Game.getPlayerId(this.owner),System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.name,Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.maxhp,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.hp,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.maxturns,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.turns,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.attack,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)),System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}",Bridge.box(this.defense,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.cost,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.ability,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.texture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.weaponTexture,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),this.getReqResearchSaveString(),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode)),System.String.format("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}",Bridge.box(this.x,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.y,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.z,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.exp,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.level,System.Int32),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.canAttack,System.Boolean,$box_.System.Boolean.toString),Bridge.box(Kingdom.MapObject.separator,System.Char,$box_.System.Char.toString,$box_.System.Char.getHashCode),Bridge.box(this.alive,System.Boolean,$box_.System.Boolean.toString)))},getReqResearchSaveString:function(){for(var s="",i=0;i<this.reqResearch.length;i=i+1|0)s=System.String.concat(s,this.reqResearch[System.Array.index(i,this.reqResearch)]),i!==(this.reqResearch.length-1|0)&&(s=System.String.concat(s,String.fromCharCode(Kingdom.Unit.reqResearchSeparator)));return s},getReqResearches:function(s){var $t,i=new(System.Collections.Generic.List$1(System.Int32)),a;$t=Bridge.getEnumerator(System.String.split(s,[Kingdom.Unit.reqResearchSeparator].map(function(i){return String.fromCharCode(i)})));try{while($t.moveNext())(a=$t.Current,Bridge.referenceEquals(a.trim(),""))||i.add(System.Int32.parse(a))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}return i.toArray()}}});var $box_={};Bridge.ns("System.Char",$box_);Bridge.apply($box_.System.Char,{toString:function(obj){return String.fromCharCode(obj)},getHashCode:function(obj){return System.Char.getHashCode(obj)}});Bridge.ns("System.Double",$box_);Bridge.apply($box_.System.Double,{toString:function(obj){return System.Double.format(obj,"G")},getHashCode:function(obj){return System.Double.getHashCode(obj)}});Bridge.ns("System.Boolean",$box_);Bridge.apply($box_.System.Boolean,{toString:function(obj){return System.Boolean.toString(obj)}});Bridge.ns("Kingdom.Unit.Ability",$box_);Bridge.apply($box_.Kingdom.Unit.Ability,{toString:function(obj){return System.Enum.toString(Kingdom.Unit.Ability,obj)}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJLaW5nZG9tLm1pbi5qcyIsCiAgInNvdXJjZVJvb3QiOiAiIiwKICAic291cmNlcyI6IFtdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICIiLAogICJzb3VyY2VzQ29udGVudCI6IFtdCn0K
